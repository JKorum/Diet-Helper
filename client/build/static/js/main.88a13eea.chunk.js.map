{"version":3,"sources":["store/reducers/types.ts","store/reducers/alert.ts","store/reducers/profile.ts","store/reducers/recipes.ts","store/reducers/root.ts","store/reducers/track.ts","store/store.ts","components/PrivateRoute.tsx","store/actions/user.ts","store/actions/api.ts","components/helpers/Navigation.tsx","store/actions/auth.ts","components/modals/UnregisterModal.tsx","utils/buildRecipesQuery.ts","components/helpers/Alert.tsx","components/private/Recipe.tsx","components/modals/RecipeModal.tsx","components/private/RecipesList.tsx","components/helpers/Spinner.tsx","components/private/SearchRecipes.tsx","components/public/Register.tsx","utils/generateRandomSearch.ts","utils/parseAnalysis.ts","components/modals/AnalysisModal.tsx","components/private/RecipeAnalysis.tsx","components/private/CollectedRecipe.tsx","components/private/CollectionList.tsx","components/modals/CollectionModal.tsx","components/private/Collection.tsx","components/private/ChangeCredentials.tsx","utils/sanitizers.ts","components/public/Landing.tsx","components/public/Login.tsx","components/public/NotFound.tsx","components/App.tsx","index.tsx"],"names":["ActionsTypes","initialState","user","loading","authenticated","error","fetched","more","undefined","infinite","rootReducer","combineReducers","profile","state","action","type","LOAD_PROFILE","PROFILE_LOADED","payload","PROFILE_ERROR","LOGOUT","ACCOUNT_DELETED","REMOVE_PROFILE_ERROR","UPDATE_PROFILE","PROFILE_UPDATED","PROFILE_UPDATE_ERROR","COLLECTION_SAVE_ITEM","recipes","COLLECTION_DELETE_ITEM","length","filter","recipe","_id","DELETE_COLLECTION","COLLECTION_ERROR","LOAD_RECIPES","RECIPES_LOADED_NEW","RECIPES_LOADED_SUC","RECIPES_ERROR","RECIPES_INFINITE_BLOCK","RECIPES_INFINITE_ALLOW","RECIPES_CLEANUP","alert","SET_ALERT","REMOVE_ALERT","userActed","USER_ACTED_TRUE","USER_ACTED_FALSE","middleWare","thunk","store","createStore","composeWithDevTools","applyMiddleware","connect","path","component","rest","to","saveCollectionItem","data","fromModal","config","url","method","dispatch","a","async","axios","response","status","text","color","console","log","message","fetchRecipes","query","successive","from","get","hits","map","item","clientSideId","uuid","className","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","role","aria-haspopup","aria-labelledby","onClick","useState","input","setInput","disabled","setDisabled","useEffect","$modal","document","getElementById","observer","MutationObserver","mutationList","styleAttr","target","attributes","getNamedItem","value","includes","observe","attributeFilter","disconnect","tabIndex","aria-hidden","data-dismiss","onSubmit","e","preventDefault","delete","htmlFor","onChange","form","style","pointerEvents","buildRecipesQuery","search","diet","calories","health","dietFragment","caloriesFragment","healthFragment","searhFragment","encodeURIComponent","toLowerCase","slice","Math","round","key","fragments","fragment","Array","isArray","titlesFromCollection","label","find","handler","setLoading","source","ingredientLines","total","perServing","yield","per100g","totalWeight","recipeToSave","src","image","display","addBtnStatus","setAddBtnStatus","href","rel","line","index","RecipesList","ids","modalData","setModalData","setRecipeListState","Recipe","Spinner","makeListOfRecipesId","listOfIds","rec","push","Fields","recipesIds","btnOptState","toggleBtnOptState","dietFilState","toggleDietFilState","calFilState","toggleCalFilState","healthFilState","toggleHealthFilState","setSearch","setDiet","setCalories","vegan","vegetarian","toggleHealth","queryString","useRef","randomQueryString","garnishes","mains","sides","numOfElements","floor","random","fields","memory","field","forEach","set","generateRandomSearch","current","ceil","window","pageYOffset","innerHeight","body","scrollHeight","addEventListener","removeEventListener","handleCalRangeChange","name","handleHealthInputClick","stateValue","placeholder","defaultValue","step","toString","parseAnalysisResult","totalCal","totalNutrientsKCal","PROCNT_KCAL","FAT_KCAL","CHOCDF_KCAL","calPer100g","calInOnePercent","calFromProtPercent","quantity","calFromFatPercent","calFromCarbsPercent","proteinCalPer100","fatCalPer100","carbsCalPer100","proteinCalTotal","fatCalTotal","carbsCalTotal","totalRatio","protein","fat","carbs","AnalysisModal","title","ingr","setData","submitDisabled","setSubmitDisabled","resultDisabled","setResultDisabled","setError","result","setResult","handleChange","prevState","trim","required","rows","calTotal","calPerServing","Error","err","initialBackgroundSize","titleId","overviewId","overviewIdData","titleIdData","imgFixedId","cardId","innerWidth","imgFixed","backgroundSize","handleClick","overview","classList","contains","add","remove","overviewData","titleData","background","backgroundRepeat","backgroundOrigin","backgroundAttachment","backgroundPosition","marginTop","card","deleteCollectionItem","CollectionList","cards","getElementsByClassName","i","recipesFilter","normalized","split","filtered","ingredients","join","every","recipesData","email","password","confirm","userData","setUserdata","$email","$name","$password","$confirm","second","registerUser","minLength","setUserData","Object","keys","newName","newEmail","newPassword","updateSanitizer","updateUser","loginUser","NotFound","exact","SearchRecipes","Collection","RecipeAnalysis","ChangeCredentials","ReactDOM","render"],"mappings":"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","file":"static/js/main.88a13eea.chunk.js","sourcesContent":["export interface Recipe {\r\n  owner?: any\r\n  _id?: any\r\n  clientSideId?: string\r\n  label: string\r\n  image: string\r\n  source: string\r\n  url: string\r\n  yield: number\r\n  dietLabels: string[]\r\n  healthLabels: string[]\r\n  cautions: string[]\r\n  ingredientLines: string[]\r\n  calories: number\r\n  totalWeight: number\r\n  totalTime: number\r\n}\r\n\r\nexport interface User {\r\n  id: any\r\n  name: string\r\n  email: string\r\n  recipes: Recipe[]\r\n}\r\n\r\nexport interface Error {\r\n  error: string\r\n  status: number | undefined\r\n}\r\n\r\nexport interface ProfileState {\r\n  user: User | null\r\n  loading: boolean\r\n  authenticated: boolean\r\n  error: Error | null\r\n}\r\n\r\nexport interface RecipesState {\r\n  fetched: Recipe[] | null\r\n  more: undefined | boolean\r\n  infinite: boolean\r\n  loading: boolean\r\n  error: Error | null\r\n}\r\n\r\nexport interface AlertState {\r\n  text: string\r\n  color: string\r\n}\r\n\r\nexport interface UpdateProfileAction {\r\n  type: ActionsTypes.UPDATE_PROFILE\r\n}\r\n\r\nexport interface ProfileUpdatedAction {\r\n  type: ActionsTypes.PROFILE_UPDATED\r\n  payload: { name: string; email: string }\r\n}\r\n\r\nexport interface ProfileUpdateError {\r\n  type: ActionsTypes.PROFILE_UPDATE_ERROR\r\n  payload: Error\r\n}\r\n\r\nexport enum ActionsTypes {\r\n  LOAD_PROFILE = 'LOAD_PROFILE',\r\n  PROFILE_LOADED = 'PROFILE_LOADED',\r\n  PROFILE_ERROR = 'PROFILE_ERROR',\r\n  LOAD_RECIPES = 'LOAD_RECIPES',\r\n  RECIPES_LOADED_NEW = 'RECIPES_LOADED_NEW',\r\n  RECIPES_LOADED_SUC = 'RECIPES_LOADED_SUC',\r\n  RECIPES_ERROR = 'RECIPES_ERROR',\r\n  RECIPES_CLEANUP = 'RECIPES_CLEANUP',\r\n  RECIPES_INFINITE_ALLOW = 'RECIPES_INFINITE_ALLOW',\r\n  RECIPES_INFINITE_BLOCK = 'RECIPES_INFINITE_BLOCK',\r\n  SET_ALERT = 'SET_ALERT',\r\n  REMOVE_ALERT = 'REMOVE_ALERT',\r\n  LOGOUT = 'LOGOUT',\r\n  USER_ACTED_TRUE = 'USER_ACTED_TRUE',\r\n  USER_ACTED_FALSE = 'USER_ACTED_FALSE',\r\n  ACCOUNT_DELETED = 'ACCOUNT_DELETED',\r\n  REMOVE_PROFILE_ERROR = 'REMOVE_PROFILE_ERROR',\r\n  UPDATE_PROFILE = 'UPDATE_PROFILE',\r\n  PROFILE_UPDATED = 'PROFILE_UPDATED',\r\n  PROFILE_UPDATE_ERROR = 'PROFILE_UPDATE_ERROR',\r\n  COLLECTION_DELETE_ITEM = 'COLLECTION_DELETE_ITEM',\r\n  COLLECTION_SAVE_ITEM = 'COLLECTION_SAVE_ITEM',\r\n  DELETE_COLLECTION = 'DELETE_COLLECTION',\r\n  COLLECTION_ERROR = 'COLLECTION_ERROR'\r\n}\r\n\r\nexport interface DeleteCollectionAction {\r\n  type: ActionsTypes.DELETE_COLLECTION\r\n}\r\n\r\nexport interface DeleteCollectionItemAction {\r\n  type: ActionsTypes.COLLECTION_DELETE_ITEM\r\n  payload: string\r\n}\r\n\r\nexport interface SaveCollectionItemAction {\r\n  type: ActionsTypes.COLLECTION_SAVE_ITEM\r\n  payload: Recipe\r\n}\r\n\r\nexport interface CollectionErrorAction {\r\n  type: ActionsTypes.COLLECTION_ERROR\r\n  payload: Error\r\n}\r\n\r\nexport interface UserActedActions {\r\n  type:\r\n    | ActionsTypes.USER_ACTED_TRUE\r\n    | ActionsTypes.USER_ACTED_FALSE\r\n    | ActionsTypes.ACCOUNT_DELETED\r\n}\r\n\r\nexport interface LoadProfileAction {\r\n  type: ActionsTypes.LOAD_PROFILE\r\n}\r\n\r\nexport interface ProfileLoadedAction {\r\n  type: ActionsTypes.PROFILE_LOADED\r\n  payload: User\r\n}\r\n\r\nexport interface ProfileErrorAction {\r\n  type: ActionsTypes.PROFILE_ERROR\r\n  payload: Error\r\n}\r\n\r\nexport interface RemoveProfileError {\r\n  type: ActionsTypes.REMOVE_PROFILE_ERROR\r\n}\r\n\r\nexport interface LogoutAction {\r\n  type: ActionsTypes.LOGOUT\r\n}\r\n\r\nexport type ProfileActions =\r\n  | LoadProfileAction\r\n  | ProfileLoadedAction\r\n  | ProfileErrorAction\r\n  | LogoutAction\r\n  | AccountDeletedAction\r\n  | RemoveProfileError\r\n  | ProfileUpdatedAction\r\n  | UpdateProfileAction\r\n  | ProfileUpdateError\r\n  | DeleteCollectionAction\r\n  | DeleteCollectionItemAction\r\n  | CollectionErrorAction\r\n  | SaveCollectionItemAction\r\n\r\ninterface LoadRecipesAction {\r\n  type: ActionsTypes.LOAD_RECIPES\r\n}\r\n\r\ninterface RecipesCleanupAction {\r\n  type: ActionsTypes.RECIPES_CLEANUP\r\n}\r\n\r\ninterface RecipesLoadedAction {\r\n  type: ActionsTypes.RECIPES_LOADED_NEW | ActionsTypes.RECIPES_LOADED_SUC\r\n  payload: {\r\n    recipes: Recipe[]\r\n    more: boolean\r\n  }\r\n}\r\n\r\ninterface RecipesInfiniteActions {\r\n  type:\r\n    | ActionsTypes.RECIPES_INFINITE_ALLOW\r\n    | ActionsTypes.RECIPES_INFINITE_BLOCK\r\n}\r\n\r\ninterface RecipesErrorAction {\r\n  type: ActionsTypes.RECIPES_ERROR\r\n  payload: Error\r\n}\r\n\r\nexport type RecipesActions =\r\n  | LoadRecipesAction\r\n  | RecipesLoadedAction\r\n  | RecipesErrorAction\r\n  | LogoutAction\r\n  | AccountDeletedAction\r\n  | RecipesCleanupAction\r\n  | RecipesInfiniteActions\r\n\r\ninterface SetAlertAction {\r\n  type: ActionsTypes.SET_ALERT\r\n  payload: AlertState\r\n}\r\n\r\ninterface RemoveAlertAction {\r\n  type: ActionsTypes.REMOVE_ALERT\r\n}\r\n\r\nexport interface AccountDeletedAction {\r\n  type: ActionsTypes.ACCOUNT_DELETED\r\n}\r\n\r\nexport type AlertActions =\r\n  | SetAlertAction\r\n  | RemoveAlertAction\r\n  | AccountDeletedAction\r\n\r\nexport interface StoreState {\r\n  profile: ProfileState\r\n  recipes: RecipesState\r\n  alert: AlertState | null\r\n  userActed: boolean\r\n}\r\n","import { AlertState, AlertActions, ActionsTypes } from './types'\r\n\r\nexport const alertReducer = (\r\n  state: AlertState | null = null,\r\n  action: AlertActions\r\n): AlertState | null => {\r\n  switch (action.type) {\r\n    case ActionsTypes.SET_ALERT:\r\n      return action.payload\r\n    case ActionsTypes.REMOVE_ALERT:\r\n    case ActionsTypes.ACCOUNT_DELETED:\r\n      return null\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { ProfileState, ActionsTypes, ProfileActions } from './types'\r\n\r\nconst initialState: ProfileState = {\r\n  user: null,\r\n  loading: false,\r\n  authenticated: false,\r\n  error: null\r\n}\r\n\r\nexport const profileReducer = (\r\n  state = initialState,\r\n  action: ProfileActions\r\n): ProfileState => {\r\n  switch (action.type) {\r\n    case ActionsTypes.LOAD_PROFILE:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        loading: true,\r\n        error: null\r\n      }\r\n    case ActionsTypes.PROFILE_LOADED:\r\n      return {\r\n        user: action.payload,\r\n        loading: false,\r\n        authenticated: true,\r\n        error: null\r\n      }\r\n    case ActionsTypes.PROFILE_ERROR:\r\n      return {\r\n        user: null,\r\n        loading: false,\r\n        authenticated: false,\r\n        error: action.payload\r\n      }\r\n    case ActionsTypes.LOGOUT:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        loading: false,\r\n        authenticated: false\r\n      }\r\n    case ActionsTypes.ACCOUNT_DELETED:\r\n      return {\r\n        user: null,\r\n        loading: false,\r\n        authenticated: false,\r\n        error: null\r\n      }\r\n    case ActionsTypes.REMOVE_PROFILE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      }\r\n    case ActionsTypes.UPDATE_PROFILE:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      }\r\n    case ActionsTypes.PROFILE_UPDATED:\r\n      if (state.user) {\r\n        return {\r\n          ...state,\r\n          user: { ...state.user, ...action.payload },\r\n          loading: false\r\n        }\r\n      } else {\r\n        return {\r\n          ...state,\r\n          loading: false\r\n        }\r\n      }\r\n    case ActionsTypes.PROFILE_UPDATE_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload\r\n      }\r\n    case ActionsTypes.COLLECTION_SAVE_ITEM:\r\n      if (state.user) {\r\n        const recipes = [...state.user.recipes, action.payload]\r\n        return {\r\n          ...state,\r\n          user: { ...state.user, recipes }\r\n        }\r\n      } else {\r\n        return state\r\n      }\r\n    case ActionsTypes.COLLECTION_DELETE_ITEM:\r\n      if (state.user && state.user.recipes.length > 0) {\r\n        const recipes = state.user.recipes.filter(\r\n          recipe => recipe._id !== action.payload\r\n        )\r\n        return {\r\n          ...state,\r\n          user: { ...state.user, recipes }\r\n        }\r\n      } else {\r\n        return state\r\n      }\r\n    case ActionsTypes.DELETE_COLLECTION:\r\n      if (state.user) {\r\n        return {\r\n          ...state,\r\n          user: { ...state.user, recipes: [] }\r\n        }\r\n      } else {\r\n        return state\r\n      }\r\n    case ActionsTypes.COLLECTION_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { RecipesState, RecipesActions, ActionsTypes } from './types'\r\n\r\nconst initialState: RecipesState = {\r\n  fetched: null,\r\n  more: undefined,\r\n  infinite: true,\r\n  loading: false,\r\n  error: null\r\n}\r\n\r\nexport const recipesReducer = (\r\n  state = initialState,\r\n  action: RecipesActions\r\n): RecipesState => {\r\n  switch (action.type) {\r\n    case ActionsTypes.LOAD_RECIPES:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      }\r\n    case ActionsTypes.RECIPES_LOADED_NEW:\r\n      return {\r\n        fetched: action.payload.recipes,\r\n        more: action.payload.more,\r\n        infinite: state.infinite,\r\n        loading: false,\r\n        error: null\r\n      }\r\n    case ActionsTypes.RECIPES_LOADED_SUC:\r\n      if (state.fetched) {\r\n        return {\r\n          fetched: [...state.fetched, ...action.payload.recipes],\r\n          more: action.payload.more,\r\n          infinite: state.infinite,\r\n          loading: false,\r\n          error: null\r\n        }\r\n      } else {\r\n        return state\r\n      }\r\n    case ActionsTypes.RECIPES_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload\r\n      }\r\n    case ActionsTypes.RECIPES_INFINITE_BLOCK:\r\n      return {\r\n        ...state,\r\n        infinite: false\r\n      }\r\n    case ActionsTypes.RECIPES_INFINITE_ALLOW:\r\n      return {\r\n        ...state,\r\n        infinite: true\r\n      }\r\n    case ActionsTypes.LOGOUT:\r\n    case ActionsTypes.ACCOUNT_DELETED:\r\n    case ActionsTypes.RECIPES_CLEANUP:\r\n      return {\r\n        fetched: null,\r\n        more: undefined,\r\n        infinite: true,\r\n        loading: false,\r\n        error: null\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport {\r\n  profileReducer,\r\n  recipesReducer,\r\n  alertReducer,\r\n  StoreState,\r\n  trackReducer\r\n} from '.'\r\n\r\nexport const rootReducer = combineReducers<StoreState>({\r\n  profile: profileReducer,\r\n  recipes: recipesReducer,\r\n  alert: alertReducer,\r\n  userActed: trackReducer\r\n})\r\n","import { ActionsTypes, UserActedActions } from '.'\r\n\r\nexport const trackReducer = (\r\n  state = false,\r\n  action: UserActedActions\r\n): boolean => {\r\n  switch (action.type) {\r\n    case ActionsTypes.USER_ACTED_TRUE:\r\n      return true\r\n    case ActionsTypes.USER_ACTED_FALSE:\r\n    case ActionsTypes.ACCOUNT_DELETED:\r\n      return false\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport { rootReducer } from './reducers/root'\r\n\r\nconst initialState = {}\r\nconst middleWare = [thunk]\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleWare))\r\n)\r\n","import React, { FunctionComponent } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { connect, MapStateToProps } from 'react-redux'\r\nimport { StoreState } from '../store/reducers'\r\n\r\ninterface PrivateRouteProps extends ConnectedProps {\r\n  path: string\r\n  component: FunctionComponent\r\n}\r\n\r\ninterface ConnectedProps {\r\n  authenticated?: boolean\r\n}\r\n\r\nconst PrivateRoute: FunctionComponent<PrivateRouteProps> = ({\r\n  authenticated,\r\n\r\n  path,\r\n  component,\r\n  ...rest\r\n}) => {\r\n  if (authenticated !== undefined) {\r\n    return authenticated ? (\r\n      <Route {...rest} path={path} component={component} />\r\n    ) : (\r\n      <Redirect to='/login' />\r\n    )\r\n  } else {\r\n    return <Redirect to='/login' />\r\n  }\r\n}\r\n\r\nconst mapStateToProps: MapStateToProps<\r\n  ConnectedProps,\r\n  PrivateRouteProps,\r\n  StoreState\r\n> = ({ profile: { authenticated } }) => ({\r\n  authenticated\r\n})\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute)\r\n","import axios, { AxiosResponse, AxiosRequestConfig } from 'axios'\r\nimport { Action } from 'redux'\r\nimport { ThunkAction } from 'redux-thunk'\r\nimport {\r\n  StoreState,\r\n  ActionsTypes,\r\n  ProfileErrorAction,\r\n  ProfileLoadedAction,\r\n  LoadProfileAction,\r\n  UserActedActions,\r\n  UpdateProfileAction,\r\n  ProfileUpdatedAction,\r\n  ProfileUpdateError,\r\n  AlertActions,\r\n  CollectionErrorAction,\r\n  DeleteCollectionAction,\r\n  DeleteCollectionItemAction,\r\n  Recipe,\r\n  SaveCollectionItemAction\r\n} from '../reducers/types'\r\nimport { Sanitized } from '../../utils/sanitizers'\r\n\r\nexport const synchronizer = (): ThunkAction<\r\n  void,\r\n  StoreState,\r\n  null,\r\n  Action<ActionsTypes>\r\n> => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch<UserActedActions>({\r\n        type: ActionsTypes.USER_ACTED_FALSE\r\n      })\r\n      dispatch<LoadProfileAction>({\r\n        type: ActionsTypes.LOAD_PROFILE\r\n      })\r\n      const response = await axios.get('/api/users/synchronize')\r\n      if (response.status === 200) {\r\n        dispatch<ProfileLoadedAction>({\r\n          type: ActionsTypes.PROFILE_LOADED,\r\n          payload: response.data\r\n        })\r\n        return\r\n      }\r\n    } catch (err) {\r\n      const response: AxiosResponse | undefined = err.response\r\n      if (response) {\r\n        /* got response from server */\r\n        if (response.status === 401 || response.status === 500) {\r\n          dispatch<ProfileErrorAction>({\r\n            type: ActionsTypes.PROFILE_ERROR,\r\n            payload: { ...response.data, status: response.status }\r\n          })\r\n          return\r\n        } else {\r\n          console.log('Error:', response.data)\r\n          dispatch<ProfileErrorAction>({\r\n            type: ActionsTypes.PROFILE_ERROR,\r\n            payload: { error: 'Something went wrong', status: response.status }\r\n          })\r\n          return\r\n        }\r\n      } else {\r\n        /* no response from server */\r\n        console.log('Error:', err.message)\r\n        dispatch<ProfileErrorAction>({\r\n          type: ActionsTypes.PROFILE_ERROR,\r\n          payload: { error: 'Something went wrong', status: undefined }\r\n        })\r\n        return\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateUser = (\r\n  data: Sanitized\r\n): ThunkAction<void, StoreState, null, Action<ActionsTypes>> => {\r\n  const config: AxiosRequestConfig = {\r\n    url: '/api/users/update',\r\n    method: 'PATCH',\r\n    data\r\n  }\r\n\r\n  return async dispatch => {\r\n    try {\r\n      dispatch<UserActedActions>({\r\n        type: ActionsTypes.USER_ACTED_TRUE\r\n      })\r\n      dispatch<UpdateProfileAction>({\r\n        type: ActionsTypes.UPDATE_PROFILE\r\n      })\r\n      const response = await axios(config)\r\n      if (response.status === 200) {\r\n        const { name, email } = response.data\r\n        dispatch<ProfileUpdatedAction>({\r\n          type: ActionsTypes.PROFILE_UPDATED,\r\n          payload: { name, email }\r\n        })\r\n        dispatch<AlertActions>({\r\n          type: ActionsTypes.SET_ALERT,\r\n          payload: {\r\n            text: 'Your profile is updated.',\r\n            color: 'success'\r\n          }\r\n        })\r\n        return\r\n      }\r\n    } catch (err) {\r\n      const response: AxiosResponse | undefined = err.response\r\n      if (response) {\r\n        /* got response from server */\r\n        if (\r\n          response.status === 422 ||\r\n          response.status === 500 ||\r\n          response.status === 409 ||\r\n          response.status === 401\r\n        ) {\r\n          dispatch<ProfileUpdateError>({\r\n            type: ActionsTypes.PROFILE_UPDATE_ERROR,\r\n            payload: { ...response.data, status: response.status }\r\n          })\r\n          if (response.status === 500) {\r\n            dispatch<AlertActions>({\r\n              type: ActionsTypes.SET_ALERT,\r\n              payload: {\r\n                text:\r\n                  'It looks like there is a problem with the server. Please, try again later.',\r\n                color: 'danger'\r\n              }\r\n            })\r\n            return\r\n          }\r\n          return\r\n        } else {\r\n          dispatch<ProfileUpdateError>({\r\n            type: ActionsTypes.PROFILE_UPDATE_ERROR,\r\n            payload: { error: 'Something went wrong', status: response.status }\r\n          })\r\n          dispatch<AlertActions>({\r\n            type: ActionsTypes.SET_ALERT,\r\n            payload: {\r\n              text:\r\n                'It looks like there is a problem with the server. Please, try again later.',\r\n              color: 'danger'\r\n            }\r\n          })\r\n          return\r\n        }\r\n      } else {\r\n        /* no response from server */\r\n        console.log('Error:', err.message)\r\n        dispatch<ProfileUpdateError>({\r\n          type: ActionsTypes.PROFILE_UPDATE_ERROR,\r\n          payload: { error: 'Something went wrong', status: undefined }\r\n        })\r\n        dispatch<AlertActions>({\r\n          type: ActionsTypes.SET_ALERT,\r\n          payload: {\r\n            text: 'Something went wrong. Please, try again later.',\r\n            color: 'danger'\r\n          }\r\n        })\r\n        return\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const deleteCollectionItem = (\r\n  id: string\r\n): ThunkAction<void, StoreState, null, Action<ActionsTypes>> => {\r\n  return async dispatch => {\r\n    try {\r\n      const response = await axios.delete(`/api/recipes/${id}`)\r\n      if (response.status === 204) {\r\n        dispatch<DeleteCollectionItemAction>({\r\n          type: ActionsTypes.COLLECTION_DELETE_ITEM,\r\n          payload: id\r\n        })\r\n        dispatch<AlertActions>({\r\n          type: ActionsTypes.SET_ALERT,\r\n          payload: {\r\n            text: 'The recipe is deleted.',\r\n            color: 'success'\r\n          }\r\n        })\r\n        return\r\n      }\r\n    } catch (err) {\r\n      const response: AxiosResponse | undefined = err.response\r\n      if (response) {\r\n        /* got response from server */\r\n        if (\r\n          response.status === 403 ||\r\n          response.status === 400 ||\r\n          response.status === 500 ||\r\n          response.status === 401\r\n        ) {\r\n          dispatch<CollectionErrorAction>({\r\n            type: ActionsTypes.COLLECTION_ERROR,\r\n            payload: { error: response.data, status: response.status }\r\n          })\r\n          dispatch<AlertActions>({\r\n            type: ActionsTypes.SET_ALERT,\r\n            payload: {\r\n              text:\r\n                'It looks like there is a problem with the server. Please, try again later.',\r\n              color: 'danger'\r\n            }\r\n          })\r\n          return\r\n        } else {\r\n          dispatch<CollectionErrorAction>({\r\n            type: ActionsTypes.COLLECTION_ERROR,\r\n            payload: { error: response.data, status: response.status }\r\n          })\r\n          dispatch<AlertActions>({\r\n            type: ActionsTypes.SET_ALERT,\r\n            payload: {\r\n              text: 'Something went wrong. Please, try again later.',\r\n              color: 'danger'\r\n            }\r\n          })\r\n          return\r\n        }\r\n      } else {\r\n        /* no response from server */\r\n        console.log('Error:', err.message)\r\n        dispatch<CollectionErrorAction>({\r\n          type: ActionsTypes.COLLECTION_ERROR,\r\n          payload: { error: 'Something went wrong', status: undefined }\r\n        })\r\n        dispatch<AlertActions>({\r\n          type: ActionsTypes.SET_ALERT,\r\n          payload: {\r\n            text: 'Something went wrong. Please, try again later.',\r\n            color: 'danger'\r\n          }\r\n        })\r\n        return\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const deleteCollection = (): ThunkAction<\r\n  void,\r\n  StoreState,\r\n  null,\r\n  Action<ActionsTypes>\r\n> => {\r\n  return async dispatch => {\r\n    try {\r\n      const response = await axios.delete('/api/recipes')\r\n      if (response.status === 204) {\r\n        dispatch<DeleteCollectionAction>({\r\n          type: ActionsTypes.DELETE_COLLECTION\r\n        })\r\n        dispatch<AlertActions>({\r\n          type: ActionsTypes.SET_ALERT,\r\n          payload: {\r\n            text: 'The collection is deleted.',\r\n            color: 'success'\r\n          }\r\n        })\r\n        return\r\n      }\r\n    } catch (err) {\r\n      const response: AxiosResponse | undefined = err.response\r\n      if (response) {\r\n        /* got response from server */\r\n        if (response.status === 500 || response.status === 401) {\r\n          dispatch<CollectionErrorAction>({\r\n            type: ActionsTypes.COLLECTION_ERROR,\r\n            payload: { error: response.data, status: response.status }\r\n          })\r\n          dispatch<AlertActions>({\r\n            type: ActionsTypes.SET_ALERT,\r\n            payload: {\r\n              text:\r\n                'It looks like there is a problem with the server. Please, try again later.',\r\n              color: 'danger'\r\n            }\r\n          })\r\n          return\r\n        } else {\r\n          dispatch<CollectionErrorAction>({\r\n            type: ActionsTypes.COLLECTION_ERROR,\r\n            payload: { error: response.data, status: response.status }\r\n          })\r\n          dispatch<AlertActions>({\r\n            type: ActionsTypes.SET_ALERT,\r\n            payload: {\r\n              text: 'Something went wrong. Please, try again later.',\r\n              color: 'danger'\r\n            }\r\n          })\r\n          return\r\n        }\r\n      } else {\r\n        /* no response from server */\r\n        console.log('Error:', err.message)\r\n        dispatch<CollectionErrorAction>({\r\n          type: ActionsTypes.COLLECTION_ERROR,\r\n          payload: { error: 'Something went wrong', status: undefined }\r\n        })\r\n        dispatch<AlertActions>({\r\n          type: ActionsTypes.SET_ALERT,\r\n          payload: {\r\n            text: 'Something went wrong. Please, try again later.',\r\n            color: 'danger'\r\n          }\r\n        })\r\n        return\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const saveCollectionItem = (\r\n  data: Recipe,\r\n  fromModal: boolean\r\n): ThunkAction<void, StoreState, null, Action<ActionsTypes>> => {\r\n  const config: AxiosRequestConfig = {\r\n    url: '/api/recipes/save',\r\n    method: 'POST',\r\n    data\r\n  }\r\n  return async dispatch => {\r\n    try {\r\n      const response = await axios(config)\r\n      if (response.status === 200) {\r\n        dispatch<SaveCollectionItemAction>({\r\n          type: ActionsTypes.COLLECTION_SAVE_ITEM,\r\n          payload: response.data\r\n        })\r\n        !fromModal &&\r\n          dispatch<AlertActions>({\r\n            type: ActionsTypes.SET_ALERT,\r\n            payload: {\r\n              text: 'The recipe is added to the collection.',\r\n              color: 'success'\r\n            }\r\n          })\r\n        return\r\n      }\r\n    } catch (err) {\r\n      const response: AxiosResponse | undefined = err.response\r\n      if (response) {\r\n        /* got response from server */\r\n        if (\r\n          response.status === 422 ||\r\n          response.status === 500 ||\r\n          response.status === 401\r\n        ) {\r\n          dispatch<CollectionErrorAction>({\r\n            type: ActionsTypes.COLLECTION_ERROR,\r\n            payload: { error: response.data, status: response.status }\r\n          })\r\n          !fromModal &&\r\n            dispatch<AlertActions>({\r\n              type: ActionsTypes.SET_ALERT,\r\n              payload: {\r\n                text:\r\n                  'It looks like there is a problem with the server. Please, try again later.',\r\n                color: 'danger'\r\n              }\r\n            })\r\n          return\r\n        } else {\r\n          dispatch<CollectionErrorAction>({\r\n            type: ActionsTypes.COLLECTION_ERROR,\r\n            payload: { error: response.data, status: response.status }\r\n          })\r\n          !fromModal &&\r\n            dispatch<AlertActions>({\r\n              type: ActionsTypes.SET_ALERT,\r\n              payload: {\r\n                text: 'Something went wrong. Please, try again later.',\r\n                color: 'danger'\r\n              }\r\n            })\r\n          return\r\n        }\r\n      } else {\r\n        /* no response from server */\r\n        console.log('Error:', err.message)\r\n        dispatch<CollectionErrorAction>({\r\n          type: ActionsTypes.COLLECTION_ERROR,\r\n          payload: { error: 'Something went wrong', status: undefined }\r\n        })\r\n        !fromModal &&\r\n          dispatch<AlertActions>({\r\n            type: ActionsTypes.SET_ALERT,\r\n            payload: {\r\n              text: 'Something went wrong. Please, try again later.',\r\n              color: 'danger'\r\n            }\r\n          })\r\n        return\r\n      }\r\n    }\r\n  }\r\n}\r\n","import axios, { AxiosResponse } from 'axios'\r\nimport uuid from 'uuid/v1'\r\nimport { ThunkAction } from 'redux-thunk'\r\nimport { Action } from 'redux'\r\nimport {\r\n  ActionsTypes,\r\n  RecipesActions,\r\n  StoreState,\r\n  Recipe,\r\n  UserActedActions,\r\n  AlertActions\r\n} from '../reducers'\r\n\r\ninterface FetchedResult {\r\n  more: boolean\r\n  hits: [\r\n    {\r\n      recipe: Recipe\r\n    }\r\n  ]\r\n}\r\n\r\nexport const fetchRecipes = (\r\n  query: string,\r\n  successive: boolean,\r\n  from: number\r\n): ThunkAction<void, StoreState, null, Action<ActionsTypes>> => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch<UserActedActions>({\r\n        type: ActionsTypes.USER_ACTED_TRUE\r\n      })\r\n      dispatch<RecipesActions>({\r\n        type: ActionsTypes.LOAD_RECIPES\r\n      })\r\n      dispatch<RecipesActions>({\r\n        type: ActionsTypes.RECIPES_INFINITE_BLOCK\r\n      })\r\n\r\n      const response = await axios.get(`/api/recipes?${query}&from=${from}`)\r\n      if (response.status === 200) {\r\n        const { more, hits } = response.data as FetchedResult\r\n\r\n        let recipes: Recipe[]\r\n\r\n        if (hits.length > 0) {\r\n          recipes = hits.map(item => {\r\n            item.recipe.clientSideId = uuid()\r\n            return item.recipe\r\n          })\r\n        } else {\r\n          recipes = []\r\n        }\r\n\r\n        if (successive) {\r\n          dispatch<RecipesActions>({\r\n            type: ActionsTypes.RECIPES_LOADED_SUC,\r\n            payload: {\r\n              recipes,\r\n              more\r\n            }\r\n          })\r\n          dispatch<RecipesActions>({\r\n            type: ActionsTypes.RECIPES_INFINITE_ALLOW\r\n          })\r\n          return\r\n        } else {\r\n          dispatch<RecipesActions>({\r\n            type: ActionsTypes.RECIPES_LOADED_NEW,\r\n            payload: {\r\n              recipes,\r\n              more\r\n            }\r\n          })\r\n          dispatch<RecipesActions>({\r\n            type: ActionsTypes.RECIPES_INFINITE_ALLOW\r\n          })\r\n          return\r\n        }\r\n      }\r\n    } catch (err) {\r\n      const response: AxiosResponse | undefined = err.response\r\n      /* got response from server */\r\n      if (response) {\r\n        if (\r\n          response.status === 422 ||\r\n          response.status === 404 ||\r\n          response.status === 500 ||\r\n          response.status === 401\r\n        ) {\r\n          dispatch<RecipesActions>({\r\n            type: ActionsTypes.RECIPES_ERROR,\r\n            payload: { error: response.data, status: response.status }\r\n          })\r\n          dispatch<RecipesActions>({\r\n            type: ActionsTypes.RECIPES_INFINITE_ALLOW\r\n          })\r\n\r\n          if (response.status === 404 || response.status === 500) {\r\n            dispatch<AlertActions>({\r\n              type: ActionsTypes.SET_ALERT,\r\n              payload: {\r\n                text:\r\n                  'It looks like there is a problem with the server. Please, try again later.',\r\n                color: 'danger'\r\n              }\r\n            })\r\n            return\r\n          }\r\n          return\r\n        } else {\r\n          dispatch<RecipesActions>({\r\n            type: ActionsTypes.RECIPES_ERROR,\r\n            payload: { error: 'Something went wrong', status: response.status }\r\n          })\r\n          dispatch<RecipesActions>({\r\n            type: ActionsTypes.RECIPES_INFINITE_ALLOW\r\n          })\r\n          dispatch<AlertActions>({\r\n            type: ActionsTypes.SET_ALERT,\r\n            payload: {\r\n              text: 'Something went wrong. Please, try again later.',\r\n              color: 'danger'\r\n            }\r\n          })\r\n          return\r\n        }\r\n      } else {\r\n        /* no response from server */\r\n        console.log('Error:', err.message)\r\n        dispatch<RecipesActions>({\r\n          type: ActionsTypes.RECIPES_ERROR,\r\n          payload: { error: 'Something went wrong', status: undefined }\r\n        })\r\n        dispatch<RecipesActions>({\r\n          type: ActionsTypes.RECIPES_INFINITE_ALLOW\r\n        })\r\n        dispatch<AlertActions>({\r\n          type: ActionsTypes.SET_ALERT,\r\n          payload: {\r\n            text:\r\n              'It looks like there is a problem with the server. Please, try again later.',\r\n            color: 'danger'\r\n          }\r\n        })\r\n        return\r\n      }\r\n    }\r\n  }\r\n}\r\n","import React, { FunctionComponent } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { logoutUser } from '../../store/actions'\r\n\r\ninterface NavConnectedProps {\r\n  dispatch: Function\r\n}\r\n\r\nconst Navigation: FunctionComponent<NavConnectedProps> = ({ dispatch }) => {\r\n  const handleLogout = () => {\r\n    dispatch(logoutUser())\r\n  }\r\n\r\n  return (\r\n    <nav className='navbar navbar-expand-sm navbar-light'>\r\n      <div className='container align-items-baseline'>\r\n        <button\r\n          className='navbar-toggler ml-auto'\r\n          type='button'\r\n          data-toggle='collapse'\r\n          data-target='#navbarContent'\r\n          aria-controls='navbarContent'\r\n          aria-expanded='false'\r\n          aria-label='Toggle navigation'\r\n        >\r\n          <i className='fas fa-bars'></i>\r\n        </button>\r\n\r\n        <div\r\n          className='collapse navbar-collapse justify-content-end'\r\n          id='navbarContent'\r\n        >\r\n          <ul className='navbar-nav'>\r\n            <li className='nav-item'>\r\n              <NavLink className='nav-link' to='/search'>\r\n                <span id='nav-search' className='badge-nav'>\r\n                  <p>Search</p>\r\n                </span>\r\n              </NavLink>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <NavLink className='nav-link' to='/collection'>\r\n                <span id='nav-collection' className='badge-nav'>\r\n                  <p>Collection</p>\r\n                </span>\r\n              </NavLink>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <NavLink className='nav-link' to='/analysis'>\r\n                <span id='nav-analysis' className='badge-nav'>\r\n                  <p>Analysis</p>\r\n                </span>\r\n              </NavLink>\r\n            </li>\r\n            <li className='nav-item dropdown'>\r\n              <span\r\n                className='nav-link'\r\n                data-toggle='dropdown'\r\n                id='navbarDropdown'\r\n                role='button'\r\n                aria-haspopup='true'\r\n                aria-expanded='false'\r\n              >\r\n                <span id='nav-account' className='badge-nav'>\r\n                  <p>Account</p> <i className='fas fa-caret-left'></i>\r\n                </span>\r\n              </span>\r\n\r\n              <div className='dropdown-menu' aria-labelledby='navbarDropdown'>\r\n                <span className='dropdown-item' onClick={handleLogout}>\r\n                  Exit\r\n                </span>\r\n                <div className='dropdown-divider'></div>\r\n                <NavLink className='dropdown-item' to='/credentials'>\r\n                  Credentials\r\n                </NavLink>\r\n                <div className='dropdown-divider'></div>\r\n                <span\r\n                  className='dropdown-item'\r\n                  data-toggle='modal'\r\n                  data-target='#unregisterModal'\r\n                >\r\n                  Delete\r\n                </span>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default connect()(Navigation)\r\n","import axios, { AxiosRequestConfig, AxiosResponse } from 'axios'\r\nimport { Action } from 'redux'\r\nimport {\r\n  ActionsTypes,\r\n  LoadProfileAction,\r\n  ProfileLoadedAction,\r\n  ProfileErrorAction,\r\n  StoreState,\r\n  LogoutAction,\r\n  UserActedActions,\r\n  RemoveProfileError,\r\n  AccountDeletedAction\r\n} from '../reducers'\r\nimport { ThunkAction } from 'redux-thunk'\r\n\r\nexport interface RegisterCredentials {\r\n  name: string\r\n  email: string\r\n  password: string\r\n}\r\n\r\nexport interface LoginCredentials {\r\n  email: string\r\n  password: string\r\n}\r\n\r\nexport const registerUser = (\r\n  data: RegisterCredentials\r\n): ThunkAction<void, StoreState, null, Action<ActionsTypes>> => {\r\n  const config: AxiosRequestConfig = {\r\n    url: '/api/register',\r\n    method: 'POST',\r\n    data\r\n  }\r\n  return async dispatch => {\r\n    try {\r\n      dispatch<RemoveProfileError>({\r\n        type: ActionsTypes.REMOVE_PROFILE_ERROR\r\n      })\r\n      dispatch<UserActedActions>({\r\n        type: ActionsTypes.USER_ACTED_TRUE\r\n      })\r\n      const primus = await axios(config)\r\n      if (primus.status === 201) {\r\n        dispatch<LoadProfileAction>({\r\n          type: ActionsTypes.LOAD_PROFILE\r\n        })\r\n        const second = await axios.get('/api/users/synchronize')\r\n        if (second.status === 200) {\r\n          dispatch<ProfileLoadedAction>({\r\n            type: ActionsTypes.PROFILE_LOADED,\r\n            payload: second.data\r\n          })\r\n        }\r\n      }\r\n    } catch (err) {\r\n      const response: AxiosResponse | undefined = err.response\r\n      if (response) {\r\n        if (\r\n          response.status === 422 ||\r\n          response.status === 500 ||\r\n          response.status === 401 ||\r\n          response.status === 409\r\n        ) {\r\n          dispatch<ProfileErrorAction>({\r\n            type: ActionsTypes.PROFILE_ERROR,\r\n            payload: { ...response.data, status: response.status }\r\n          })\r\n        } else {\r\n          console.log('Error:', response.data)\r\n          dispatch<ProfileErrorAction>({\r\n            type: ActionsTypes.PROFILE_ERROR,\r\n            payload: { error: 'Something went wrong', status: response.status }\r\n          })\r\n        }\r\n      } else {\r\n        console.log('Error:', err.message)\r\n        dispatch<ProfileErrorAction>({\r\n          type: ActionsTypes.PROFILE_ERROR,\r\n          payload: { error: 'Something went wrong', status: undefined }\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const unregisterUser = (): ThunkAction<\r\n  void,\r\n  StoreState,\r\n  null,\r\n  Action<ActionsTypes>\r\n> => {\r\n  return async dispatch => {\r\n    try {\r\n      const response = await axios.delete('/api/unregister')\r\n      if (response.status === 204) {\r\n        dispatch<AccountDeletedAction>({\r\n          type: ActionsTypes.ACCOUNT_DELETED\r\n        })\r\n      }\r\n    } catch (err) {\r\n      const response: AxiosResponse | undefined = err.response\r\n      /* got response from server */\r\n      if (response) {\r\n        if (response.status === 500 || response.status === 401) {\r\n          dispatch<ProfileErrorAction>({\r\n            type: ActionsTypes.PROFILE_ERROR,\r\n            payload: {\r\n              ...response.data,\r\n              status: response.status\r\n            }\r\n          })\r\n          return\r\n        } else {\r\n          console.log('Error:', response.data)\r\n          dispatch<ProfileErrorAction>({\r\n            type: ActionsTypes.PROFILE_ERROR,\r\n            payload: { error: 'Something went wrong', status: response.status }\r\n          })\r\n          return\r\n        }\r\n      } else {\r\n        /* no response from server */\r\n        console.log('Error:', err.message)\r\n        dispatch<ProfileErrorAction>({\r\n          type: ActionsTypes.PROFILE_ERROR,\r\n          payload: { error: 'Something went wrong', status: undefined }\r\n        })\r\n        return\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const loginUser = (\r\n  data: LoginCredentials\r\n): ThunkAction<void, StoreState, null, Action<ActionsTypes>> => {\r\n  const config: AxiosRequestConfig = {\r\n    url: '/api/login',\r\n    method: 'POST',\r\n    data\r\n  }\r\n  return async dispatch => {\r\n    try {\r\n      dispatch<RemoveProfileError>({\r\n        type: ActionsTypes.REMOVE_PROFILE_ERROR\r\n      })\r\n      dispatch<UserActedActions>({\r\n        type: ActionsTypes.USER_ACTED_TRUE\r\n      })\r\n      const primus = await axios(config)\r\n      if (primus.status === 200) {\r\n        dispatch<LoadProfileAction>({\r\n          type: ActionsTypes.LOAD_PROFILE\r\n        })\r\n        const second = await axios.get('api/users/synchronize')\r\n        if (second.status === 200) {\r\n          dispatch<ProfileLoadedAction>({\r\n            type: ActionsTypes.PROFILE_LOADED,\r\n            payload: second.data\r\n          })\r\n          return\r\n        }\r\n      }\r\n    } catch (err) {\r\n      const response: AxiosResponse | undefined = err.response\r\n      /* got response from server */\r\n      if (response) {\r\n        if (\r\n          response.status === 401 ||\r\n          response.status === 500 ||\r\n          response.status === 422\r\n        ) {\r\n          dispatch<ProfileErrorAction>({\r\n            type: ActionsTypes.PROFILE_ERROR,\r\n            payload: {\r\n              ...response.data,\r\n              status: response.status\r\n            }\r\n          })\r\n          return\r\n        } else {\r\n          console.log('Error:', response.data)\r\n          dispatch<ProfileErrorAction>({\r\n            type: ActionsTypes.PROFILE_ERROR,\r\n            payload: { error: 'Something went wrong', status: response.status }\r\n          })\r\n          return\r\n        }\r\n      } else {\r\n        /* no response from server */\r\n        console.log('Error:', err.message)\r\n        dispatch<ProfileErrorAction>({\r\n          type: ActionsTypes.PROFILE_ERROR,\r\n          payload: { error: 'Something went wrong', status: undefined }\r\n        })\r\n        return\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const logoutUser = (): ThunkAction<\r\n  void,\r\n  StoreState,\r\n  null,\r\n  Action<ActionsTypes>\r\n> => {\r\n  return async dispatch => {\r\n    try {\r\n      const response = await axios.get('/api/logout')\r\n      if (response.status === 200) {\r\n        dispatch<LogoutAction>({\r\n          type: ActionsTypes.LOGOUT\r\n        })\r\n        dispatch<UserActedActions>({\r\n          type: ActionsTypes.USER_ACTED_FALSE\r\n        })\r\n        return\r\n      }\r\n    } catch (err) {\r\n      const response: AxiosResponse | undefined = err.response\r\n      if (response) {\r\n        /* got response from server */\r\n        if (response.status === 401 || response.status === 500) {\r\n          dispatch<ProfileErrorAction>({\r\n            type: ActionsTypes.PROFILE_ERROR,\r\n            payload: { ...response.data, status: response.status }\r\n          })\r\n          return\r\n        } else {\r\n          console.log('Error:', response.data)\r\n          dispatch<ProfileErrorAction>({\r\n            type: ActionsTypes.PROFILE_ERROR,\r\n            payload: { error: 'Something went wrong', status: response.status }\r\n          })\r\n          return\r\n        }\r\n      } else {\r\n        /* no response from server */\r\n        console.log('Error:', err.message)\r\n        dispatch<ProfileErrorAction>({\r\n          type: ActionsTypes.PROFILE_ERROR,\r\n          payload: { error: 'Something went wrong', status: undefined }\r\n        })\r\n        return\r\n      }\r\n    }\r\n  }\r\n}\r\n","import React, {\r\n  FunctionComponent,\r\n  FormEvent,\r\n  useState,\r\n  useEffect,\r\n  SyntheticEvent\r\n} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { unregisterUser } from '../../store/actions'\r\n\r\ninterface UnregModalConnectedProps {\r\n  dispatch?: Function\r\n}\r\n\r\nconst UnregisterModal: FunctionComponent<UnregModalConnectedProps> = ({\r\n  dispatch\r\n}) => {\r\n  const [input, setInput] = useState('')\r\n  const [disabled, setDisabled] = useState(true)\r\n\r\n  useEffect(() => {\r\n    if (input === 'Delete my account') {\r\n      setDisabled(false)\r\n    } else {\r\n      setDisabled(true)\r\n    }\r\n  }, [input])\r\n\r\n  /* the following useEffect clean up input field when modal is hidden */\r\n  useEffect(() => {\r\n    const $modal = document.getElementById('unregisterModal')\r\n\r\n    if ($modal) {\r\n      const callback = function(\r\n        mutationList: MutationRecord[],\r\n        observer: MutationObserver\r\n      ) {\r\n        for (let mutation of mutationList) {\r\n          const element = mutation.target as HTMLElement\r\n          const attrMap = element.attributes\r\n\r\n          const styleAttr = attrMap.getNamedItem('style')\r\n          if (styleAttr) {\r\n            if (styleAttr.value.includes('display: none;')) {\r\n              setInput('')\r\n            }\r\n          }\r\n        }\r\n      }\r\n      const config: MutationObserverInit = {\r\n        attributes: true,\r\n        attributeFilter: ['style']\r\n      }\r\n      const observer = new MutationObserver(callback)\r\n      observer.observe($modal, config)\r\n\r\n      return () => {\r\n        observer.disconnect()\r\n      }\r\n    }\r\n  })\r\n\r\n  const handleSubmit = (e: FormEvent) => {\r\n    e.preventDefault()\r\n    if (input === 'Delete my account') {\r\n      if (dispatch) {\r\n        dispatch(unregisterUser())\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleChange = (e: SyntheticEvent) => {\r\n    const target = e.target as HTMLInputElement\r\n    setInput(target.value)\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className='modal fade'\r\n      id='unregisterModal'\r\n      tabIndex={-1}\r\n      role='dialog'\r\n      aria-labelledby='unregisterModalTitle'\r\n      aria-hidden='true'\r\n    >\r\n      <div className='modal-dialog modal-dialog-centered' role='document'>\r\n        <div className='modal-content'>\r\n          <div className='modal-header'>\r\n            <h5 className='modal-title' id='unregisterModalTitle'>\r\n              Account Deletion\r\n            </h5>\r\n            <button\r\n              type='button'\r\n              className='close'\r\n              data-dismiss='modal'\r\n              aria-label='Close'\r\n            >\r\n              <span aria-hidden='true'>&times;</span>\r\n            </button>\r\n          </div>\r\n\r\n          <div className='modal-body'>\r\n            <form id='account-deletion' onSubmit={handleSubmit}>\r\n              <div className='form-group'>\r\n                <label htmlFor='confirmation'>\r\n                  Type 'Delete my account' and hit 'Submit.'\r\n                </label>\r\n                <input\r\n                  type='text'\r\n                  className='form-control'\r\n                  id='confirmation'\r\n                  value={input}\r\n                  onChange={handleChange}\r\n                />\r\n                <small className='form-text text-muted'>\r\n                  This action will erase all your data permanently.\r\n                </small>\r\n              </div>\r\n            </form>\r\n          </div>\r\n\r\n          <div className='modal-footer'>\r\n            <button\r\n              form='account-deletion'\r\n              type='submit'\r\n              className='btn btn-cool'\r\n              disabled={disabled}\r\n              style={{ pointerEvents: disabled ? 'none' : 'auto' }}\r\n              data-toggle='modal'\r\n              data-target='#unregisterModal'\r\n            >\r\n              <p>Submit</p>\r\n            </button>\r\n            <button\r\n              type='button'\r\n              className='btn btn-cool btn-cool-cancel'\r\n              data-dismiss='modal'\r\n            >\r\n              <p>Cancel</p>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect()(UnregisterModal)\r\n","import {\r\n  Search,\r\n  Diet,\r\n  Calories,\r\n  HealthBoxes\r\n} from '../components/private/SearchRecipes'\r\n\r\ninterface Fragments {\r\n  dietFragment: string | undefined\r\n  caloriesFragment: string | undefined\r\n  healthFragment: string | undefined\r\n}\r\n\r\nexport const buildRecipesQuery = (\r\n  search: Search,\r\n  diet: Diet,\r\n  calories: Calories,\r\n  health: HealthBoxes\r\n): string | null => {\r\n  if (search.length > 0) {\r\n    let searhFragment = `q=${encodeURIComponent(search.toLowerCase())}`\r\n\r\n    let dietFragment: string | undefined\r\n    if (diet.length > 0) {\r\n      dietFragment = `&diet=${diet}`\r\n    }\r\n\r\n    let caloriesFragment: string | undefined\r\n    if (calories.from.length > 0 && calories.to.length > 0) {\r\n      let from: string | number = calories.from\r\n      let to: string | number = calories.to\r\n      if (from[0] === '-') {\r\n        from = from.slice(1)\r\n      }\r\n      if (to[0] === '-') {\r\n        to = to.slice(1)\r\n      }\r\n      from = Math.round(+from)\r\n      to = Math.round(+to)\r\n      caloriesFragment = `&calories=${from}-${to}`\r\n    } else if (calories.from.length > 0) {\r\n      let from: string | number = calories.from\r\n      if (from[0] === '-') {\r\n        from = from.slice(1)\r\n      }\r\n      from = Math.round(+from)\r\n      caloriesFragment = `&calories=${from}${encodeURIComponent('+')}`\r\n    } else if (calories.to.length > 0) {\r\n      let to: string | number = calories.to\r\n      if (to[0] === '-') {\r\n        to = to.slice(1)\r\n      }\r\n      to = Math.round(+to)\r\n      caloriesFragment = `&calories=${to}`\r\n    }\r\n\r\n    let healthFragment: string | undefined\r\n    for (let key in health) {\r\n      if (health[key as keyof HealthBoxes]) {\r\n        if (typeof healthFragment === 'undefined') {\r\n          healthFragment = `&health=${key}`\r\n        } else {\r\n          healthFragment = healthFragment + `&health=${key}`\r\n        }\r\n      }\r\n    }\r\n\r\n    /* building final query */\r\n    const fragments: Fragments = {\r\n      dietFragment,\r\n      caloriesFragment,\r\n      healthFragment\r\n    }\r\n    for (let fragment in fragments) {\r\n      if (fragments[fragment as keyof Fragments]) {\r\n        searhFragment = searhFragment + fragments[fragment as keyof Fragments]\r\n      }\r\n    }\r\n\r\n    return searhFragment\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n","import React, { FunctionComponent, useEffect } from 'react'\r\nimport { connect, MapStateToProps } from 'react-redux'\r\nimport { Dispatch } from 'redux'\r\nimport { AlertState, StoreState } from '../../store/reducers'\r\nimport { AlertActions, ActionsTypes } from '../../store/reducers'\r\n\r\ninterface AlertOwnProps {}\r\ninterface AlertConnectedProps {\r\n  alert: AlertState | null\r\n  dispatch?: Dispatch<AlertActions>\r\n}\r\n\r\nconst Alert: FunctionComponent<AlertConnectedProps> = ({ alert, dispatch }) => {\r\n  useEffect(() => {\r\n    return () => {\r\n      if (dispatch && alert) {\r\n        dispatch({\r\n          type: ActionsTypes.REMOVE_ALERT\r\n        })\r\n      }\r\n    }\r\n  }, [alert])\r\n\r\n  const handleClick = () => {\r\n    if (dispatch) {\r\n      dispatch({\r\n        type: ActionsTypes.REMOVE_ALERT\r\n      })\r\n    }\r\n  }\r\n\r\n  if (alert) {\r\n    const { text, color } = alert\r\n    let status: string\r\n    if (color === 'success') {\r\n      status = 'Done!'\r\n    } else if (color === 'danger') {\r\n      status = 'Error.'\r\n    } else {\r\n      status = 'Sorry.'\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className={`alert alert-${color} alert-dismissible fade show fixed-bottom mb-0 rounded-0`}\r\n        role='alert'\r\n      >\r\n        <strong>{status}</strong> {text}\r\n        <button\r\n          type='button'\r\n          className='close'\r\n          data-dismiss='alert'\r\n          aria-label='Close'\r\n          onClick={handleClick}\r\n        >\r\n          <span aria-hidden='true'>&times;</span>\r\n        </button>\r\n      </div>\r\n    )\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n\r\nconst mapStateToProps: MapStateToProps<\r\n  AlertConnectedProps,\r\n  AlertOwnProps,\r\n  StoreState\r\n> = ({ alert }) => ({\r\n  alert\r\n})\r\n\r\nexport default connect(mapStateToProps)(Alert)\r\n","import React, { FunctionComponent, SyntheticEvent, useState } from 'react'\r\nimport { connect, MapStateToProps } from 'react-redux'\r\nimport { StoreState, Recipe, ActionsTypes } from '../../store/reducers'\r\nimport { RecipeModalData, SetRecipeListState } from './RecipesList'\r\nimport { saveCollectionItem } from '../../store/actions'\r\n\r\ninterface RecipeOwnProps {\r\n  id: string\r\n  handler?: SetRecipeListState\r\n}\r\n\r\ninterface RecipeConnectedProps {\r\n  recipe: Recipe | undefined\r\n  titlesFromCollection: string[]\r\n  handler?: SetRecipeListState\r\n  dispatch?: Function\r\n}\r\n\r\nconst RecipeItem: FunctionComponent<RecipeConnectedProps> = ({\r\n  titlesFromCollection,\r\n  recipe,\r\n  handler,\r\n  dispatch\r\n}) => {\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  if (recipe) {\r\n    const data: RecipeModalData = {\r\n      label: recipe.label,\r\n      source: recipe.source,\r\n      url: recipe.url,\r\n      ingredientLines: recipe.ingredientLines,\r\n      calories: {\r\n        total: Math.round(recipe.calories),\r\n        perServing: Math.round(recipe.calories / recipe.yield),\r\n        per100g: Math.round((recipe.calories * 100) / recipe.totalWeight)\r\n      },\r\n      recipeToSave: recipe\r\n    }\r\n\r\n    const handleClick = (e: SyntheticEvent) => {\r\n      if (handler) {\r\n        handler(data)\r\n      }\r\n    }\r\n\r\n    const handleSaveRecipe = async (e: SyntheticEvent) => {\r\n      if (dispatch) {\r\n        setLoading(true)\r\n        /* the recipe is already in collection? */\r\n        if (!titlesFromCollection.includes(data.label.toLowerCase())) {\r\n          /* no -> proceed */\r\n          await dispatch(saveCollectionItem(recipe, false))\r\n          setLoading(false)\r\n        } else {\r\n          /* yes -> stop */\r\n          setLoading(false)\r\n          dispatch({\r\n            type: ActionsTypes.SET_ALERT,\r\n            payload: {\r\n              text: 'The recipe is already in the collection.',\r\n              color: 'light'\r\n            }\r\n          })\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className='card h-100 animated fadeIn'>\r\n        <img src={recipe.image} className='card-img-top' />\r\n        <div className='card-body'>\r\n          <h4 className='card-title'>{data.label}</h4>\r\n          <table className='table table-sm'>\r\n            <tbody>\r\n              <tr>\r\n                <td className='border-top-0'>Total kcal</td>\r\n                <td className='border-top-0'>{data.calories.total}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>per serving</td>\r\n                <td>{data.calories.perServing}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>per 100g</td>\r\n                <td>{data.calories.per100g}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className='card-footer'>\r\n          <button\r\n            className='btn btn-outline-primary btn-sm mr-1 mb-1'\r\n            data-toggle='modal'\r\n            data-target='#recipeModal'\r\n            onClick={handleClick}\r\n          >\r\n            Learn More\r\n          </button>\r\n          <button\r\n            className='btn btn-outline-primary btn-sm mb-1'\r\n            onClick={handleSaveRecipe}\r\n          >\r\n            <span\r\n              className='spinner-border spinner-border-sm align-middle'\r\n              role='status'\r\n              aria-hidden='true'\r\n              style={\r\n                loading ? { display: 'inline-block' } : { display: 'none' }\r\n              }\r\n            ></span>{' '}\r\n            Add To Collection\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n\r\nconst mapStateToProps: MapStateToProps<\r\n  RecipeConnectedProps,\r\n  RecipeOwnProps,\r\n  StoreState\r\n> = ({ profile: { user }, recipes: { fetched } }, { id }) => {\r\n  if (Array.isArray(fetched) && user) {\r\n    let titlesFromCollection: string[] = []\r\n    if (user.recipes.length > 0) {\r\n      titlesFromCollection = user.recipes.map(recipe =>\r\n        recipe.label.toLowerCase()\r\n      )\r\n    }\r\n    return {\r\n      titlesFromCollection,\r\n      recipe: fetched.find(recipe => recipe.clientSideId === id)\r\n    }\r\n  } else {\r\n    return {\r\n      titlesFromCollection: [],\r\n      recipe: undefined\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(RecipeItem)\r\n","import React, {\r\n  FunctionComponent,\r\n  useState,\r\n  SyntheticEvent,\r\n  useEffect\r\n} from 'react'\r\nimport { RecipeModalData } from '../private/RecipesList'\r\nimport { connect, MapStateToProps } from 'react-redux'\r\nimport { StoreState, ActionsTypes, Error } from '../../store/reducers'\r\nimport { saveCollectionItem } from '../../store/actions'\r\n\r\ninterface RecipeModalOwnProps {\r\n  data: RecipeModalData\r\n}\r\n\r\ninterface RecipeModalConnectedProps extends RecipeModalOwnProps {\r\n  dispatch?: Function\r\n  titlesFromCollection: string[]\r\n  error: Error | null\r\n}\r\n\r\nconst RecipeModal: FunctionComponent<RecipeModalConnectedProps> = ({\r\n  data,\r\n  dispatch,\r\n  titlesFromCollection,\r\n  error\r\n}) => {\r\n  const [loading, setLoading] = useState(false)\r\n  const [addBtnStatus, setAddBtnStatus] = useState('Collect')\r\n\r\n  const handleSaveRecipe = async (e: SyntheticEvent) => {\r\n    if (dispatch) {\r\n      setLoading(true)\r\n      /* the recipe is already in collection? */\r\n      if (!titlesFromCollection.includes(data.label.toLowerCase())) {\r\n        /* no -> proceed */\r\n        await dispatch(saveCollectionItem(data.recipeToSave, true))\r\n        setLoading(false)\r\n        setAddBtnStatus('Added')\r\n      } else {\r\n        /* yes -> stop */\r\n        setLoading(false)\r\n        setAddBtnStatus('Already collected')\r\n      }\r\n    }\r\n  }\r\n\r\n  /* setting button state to default & clean up profile error */\r\n  useEffect(() => {\r\n    const $modal = document.getElementById('recipeModal')\r\n\r\n    if ($modal) {\r\n      const callback = function(\r\n        mutationList: MutationRecord[],\r\n        observer: MutationObserver\r\n      ) {\r\n        for (let mutation of mutationList) {\r\n          const element = mutation.target as HTMLElement\r\n          const attrMap = element.attributes\r\n\r\n          const styleAttr = attrMap.getNamedItem('style')\r\n          if (styleAttr) {\r\n            if (styleAttr.value.includes('display: none;')) {\r\n              setAddBtnStatus('Add To Collection')\r\n\r\n              if (error && dispatch) {\r\n                dispatch({\r\n                  type: ActionsTypes.REMOVE_PROFILE_ERROR\r\n                })\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      const config: MutationObserverInit = {\r\n        attributes: true,\r\n        attributeFilter: ['style']\r\n      }\r\n      const observer = new MutationObserver(callback)\r\n      observer.observe($modal, config)\r\n\r\n      return () => {\r\n        observer.disconnect()\r\n      }\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div\r\n      className='modal fade'\r\n      id='recipeModal'\r\n      tabIndex={-1}\r\n      role='dialog'\r\n      aria-labelledby='recipeModalTitle'\r\n      aria-hidden='true'\r\n    >\r\n      <div className='modal-dialog modal-dialog-centered' role='document'>\r\n        <div className='modal-content'>\r\n          <div className='modal-header'>\r\n            <h5 className='modal-title' id='recipeModalTitle'>\r\n              {data.label}\r\n            </h5>\r\n            <button\r\n              type='button'\r\n              className='close'\r\n              data-dismiss='modal'\r\n              aria-label='Close'\r\n            >\r\n              <span aria-hidden='true'>&times;</span>\r\n            </button>\r\n          </div>\r\n          <div className='modal-body'>\r\n            <p className='lead'>\r\n              <span className='badge badge-primary font-weight-normal'>\r\n                kcal\r\n              </span>{' '}\r\n              <span className='badge badge-primary font-weight-normal'>\r\n                {data.calories.total} total\r\n              </span>{' '}\r\n              <span className='badge badge-primary font-weight-normal'>\r\n                {data.calories.perServing} per serving\r\n              </span>{' '}\r\n              <span className='badge badge-primary font-weight-normal'>\r\n                {data.calories.per100g} per 100g\r\n              </span>\r\n            </p>\r\n            <p>\r\n              {`The recipe was originally published on '${data.source}.' You can\r\n              get to know the cooking instructions by navigating to their`}\r\n              <a\r\n                href={data.url}\r\n                target='_blank'\r\n                rel='noopener noreferrer'\r\n                className='text-decoration-none'\r\n              >\r\n                {' '}\r\n                website.\r\n              </a>{' '}\r\n              To follow along, you will need the following:\r\n            </p>\r\n\r\n            <table className='table table-sm table-striped'>\r\n              <tbody>\r\n                {data.ingredientLines.length > 0 &&\r\n                  data.ingredientLines.map((line, index) => (\r\n                    <tr key={index}>\r\n                      <td className='border-top-0'>{line}</td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            </table>\r\n\r\n            {error && (\r\n              <div className='alert alert-danger mb-0' role='alert'>\r\n                <strong>Error.</strong> Something went wrong. Please, try again\r\n                later.\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className='modal-footer'>\r\n            <button\r\n              type='button'\r\n              className='btn btn-cool'\r\n              onClick={handleSaveRecipe}\r\n            >\r\n              <span\r\n                className='spinner-border spinner-border-sm align-middle'\r\n                role='status'\r\n                aria-hidden='true'\r\n                style={\r\n                  loading ? { display: 'inline-block' } : { display: 'none' }\r\n                }\r\n              ></span>{' '}\r\n              <p>{addBtnStatus}</p>\r\n            </button>\r\n            <button\r\n              type='button'\r\n              className='btn btn-cool btn-cool-cancel'\r\n              data-dismiss='modal'\r\n            >\r\n              <p>Cancel</p>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps: MapStateToProps<\r\n  RecipeModalConnectedProps,\r\n  RecipeModalOwnProps,\r\n  StoreState\r\n> = ({ profile: { user, error } }, { data }) => {\r\n  if (user) {\r\n    if (user.recipes.length > 0) {\r\n      return {\r\n        titlesFromCollection: user.recipes.map(recipe =>\r\n          recipe.label.toLowerCase()\r\n        ),\r\n        data,\r\n        error\r\n      }\r\n    } else {\r\n      return {\r\n        titlesFromCollection: [],\r\n        data,\r\n        error\r\n      }\r\n    }\r\n  } else {\r\n    return {\r\n      titlesFromCollection: [],\r\n      data,\r\n      error\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(RecipeModal)\r\n","import React, { FunctionComponent, Fragment, useState } from 'react'\r\nimport RecipeItem from './Recipe'\r\nimport RecipeModal from '../modals/RecipeModal'\r\nimport { Recipe } from '../../store/reducers'\r\n\r\ninterface RecipesListOwnProps {\r\n  ids: string[] | null\r\n}\r\n\r\nexport interface RecipeModalData {\r\n  label: string\r\n  source: string\r\n  url: string\r\n  ingredientLines: string[]\r\n  calories: {\r\n    total: number\r\n    perServing: number\r\n    per100g: number\r\n  }\r\n  recipeToSave: Recipe\r\n}\r\n\r\nexport type SetRecipeListState = (data: RecipeModalData) => void\r\n\r\nexport const RecipesList: FunctionComponent<RecipesListOwnProps> = ({\r\n  ids\r\n}) => {\r\n  const [modalData, setModalData] = useState<RecipeModalData | null>(null)\r\n\r\n  const setRecipeListState: SetRecipeListState = data => {\r\n    setModalData(data)\r\n  }\r\n\r\n  if (Array.isArray(ids)) {\r\n    if (ids.length > 0) {\r\n      return (\r\n        <Fragment>\r\n          <div className='container-fluid mt-3'>\r\n            <div className='row'>\r\n              {ids.map(id => (\r\n                <div key={id} className='col-sm-6 col-md-4 col-lg-3 px-1 pb-1'>\r\n                  <RecipeItem id={id} handler={setRecipeListState} />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          {modalData ? <RecipeModal data={modalData} /> : null}\r\n        </Fragment>\r\n      )\r\n    } else {\r\n      return null\r\n    }\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n","import React, { FunctionComponent } from 'react'\r\n\r\nexport const Spinner: FunctionComponent = () => (\r\n  <div\r\n    id='spinner'\r\n    className='spinner-border text-dark fixed-bottom ml-auto m-2'\r\n    role='status'\r\n  >\r\n    <span className='sr-only'>Loading...</span>\r\n  </div>\r\n)\r\n","import React, {\r\n  Fragment,\r\n  useState,\r\n  useEffect,\r\n  SyntheticEvent,\r\n  FunctionComponent,\r\n  FormEvent,\r\n  useRef\r\n} from 'react'\r\nimport { connect, MapStateToProps } from 'react-redux'\r\nimport { fetchRecipes } from '../../store/actions'\r\nimport Navigation from '../helpers/Navigation'\r\nimport UnregisterModal from '../modals/UnregisterModal'\r\nimport { buildRecipesQuery } from '../../utils/buildRecipesQuery'\r\nimport { StoreState, Error, Recipe, ActionsTypes } from '../../store/reducers'\r\nimport Alert from '../helpers/Alert'\r\nimport { RecipesList } from './RecipesList'\r\nimport { Spinner } from '../helpers/Spinner'\r\nimport { generateRandomSearch } from '../../utils/generateRandomSearch'\r\n\r\nexport type Search = string\r\n\r\nexport type Diet = string\r\n\r\nexport interface Calories {\r\n  from: string\r\n  to: string\r\n}\r\n\r\nexport interface HealthBoxes {\r\n  'alcohol-free': boolean\r\n  'sugar-conscious': boolean\r\n  vegan: boolean\r\n  vegetarian: boolean\r\n  'tree-nut-free': boolean\r\n  'peanut-free': boolean\r\n}\r\n\r\ninterface SearchRecipesOwnProps {}\r\ninterface SearchRecipesConnectedProps {\r\n  recipesIds: string[] | null\r\n  userActed: boolean\r\n  loading: boolean\r\n  more: boolean | undefined\r\n  error: Error | null\r\n  dispatch?: Function\r\n  infinite: boolean\r\n}\r\n\r\nconst SearchRecipes: FunctionComponent<SearchRecipesConnectedProps> = ({\r\n  recipesIds,\r\n  userActed,\r\n  loading,\r\n  more,\r\n  dispatch,\r\n  infinite\r\n}) => {\r\n  /* state for collapsing elements */\r\n  const [btnOptState, toggleBtnOptState] = useState(false)\r\n  const [dietFilState, toggleDietFilState] = useState(false)\r\n  const [calFilState, toggleCalFilState] = useState(false)\r\n  const [healthFilState, toggleHealthFilState] = useState(false)\r\n\r\n  /* state for input */\r\n  const [search, setSearch] = useState<Search>('')\r\n  const [diet, setDiet] = useState<Diet>('')\r\n  const [calories, setCalories] = useState<Calories>({\r\n    from: '',\r\n    to: ''\r\n  })\r\n\r\n  const [health, toggleHealth] = useState<HealthBoxes>({\r\n    'alcohol-free': false,\r\n    'sugar-conscious': false,\r\n    vegan: false,\r\n    vegetarian: false,\r\n    'tree-nut-free': false,\r\n    'peanut-free': false\r\n  })\r\n\r\n  /* persistent state for pagination */\r\n  const queryString = useRef('')\r\n  const from = useRef(0)\r\n  const randomQueryString = useRef(\r\n    buildRecipesQuery(generateRandomSearch(), diet, calories, health)\r\n  )\r\n\r\n  /* state for req submit button */\r\n  const [disabled, setDisabled] = useState(true)\r\n\r\n  /* effects */\r\n  useEffect(() => {\r\n    if (dispatch) {\r\n      dispatch({\r\n        type: ActionsTypes.USER_ACTED_FALSE\r\n      })\r\n\r\n      return () => {\r\n        dispatch({\r\n          type: ActionsTypes.RECIPES_CLEANUP\r\n        })\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (search) {\r\n      setDisabled(false)\r\n    } else {\r\n      setDisabled(true)\r\n    }\r\n  }, [search])\r\n\r\n  /* fire a random request */\r\n  useEffect(() => {\r\n    if (!userActed) {\r\n      if (typeof randomQueryString.current === 'string' && dispatch) {\r\n        dispatch(fetchRecipes(randomQueryString.current, false, from.current))\r\n      }\r\n    }\r\n  }, [userActed])\r\n\r\n  /* fire infinite requests */\r\n  useEffect(() => {\r\n    const handler = (e: Event) => {\r\n      /* user scrolled to bottom? */\r\n      if (\r\n        Math.ceil(window.pageYOffset) + window.innerHeight >=\r\n        document.body.scrollHeight\r\n      ) {\r\n        /* there are recipes in store & infinite req is allowed? */\r\n        if (\r\n          Array.isArray(recipesIds) &&\r\n          recipesIds.length > 0 &&\r\n          infinite &&\r\n          dispatch\r\n        ) {\r\n          /* there are more recipes available on API? */\r\n          if (more) {\r\n            if (queryString.current) {\r\n              /* user already made req -> use their input */\r\n              from.current = from.current + 10\r\n              dispatch(fetchRecipes(queryString.current, true, from.current))\r\n            } else {\r\n              /* user didn't make req -> use generated input */\r\n              if (typeof randomQueryString.current === 'string') {\r\n                from.current = from.current + 10\r\n                dispatch(\r\n                  fetchRecipes(randomQueryString.current, true, from.current)\r\n                )\r\n              }\r\n            }\r\n          } else {\r\n            /* there are no recipes */\r\n            dispatch({\r\n              type: ActionsTypes.SET_ALERT,\r\n              payload: {\r\n                text: 'There are no more recipes matching the request.',\r\n                color: 'light'\r\n              }\r\n            })\r\n          }\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener('scroll', handler)\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', handler)\r\n    }\r\n  }, [recipesIds, infinite])\r\n\r\n  /* local state handlers */\r\n  const handleBtnOptClick = (e: SyntheticEvent) => {\r\n    toggleBtnOptState(!btnOptState)\r\n  }\r\n\r\n  const handleDietClick = (e: SyntheticEvent) => {\r\n    toggleDietFilState(!dietFilState)\r\n  }\r\n\r\n  const handleCalClick = (e: SyntheticEvent) => {\r\n    toggleCalFilState(!calFilState)\r\n  }\r\n\r\n  const handleHealthClick = (e: SyntheticEvent) => {\r\n    toggleHealthFilState(!healthFilState)\r\n  }\r\n\r\n  /* form submit handler */\r\n  const handleSubmit = (e: FormEvent) => {\r\n    e.preventDefault()\r\n\r\n    if (!userActed) {\r\n      /* first user req -> set ref to query && initialize from to default */\r\n      const query = buildRecipesQuery(search, diet, calories, health)\r\n      if (typeof query === 'string' && dispatch) {\r\n        queryString.current = query\r\n        from.current = 0\r\n        dispatch(fetchRecipes(query, false, from.current))\r\n      }\r\n    } else {\r\n      /* subsequent user req */\r\n      const query = buildRecipesQuery(search, diet, calories, health)\r\n      if (typeof query === 'string' && dispatch) {\r\n        if (queryString.current === query) {\r\n          /* user sent the same req */\r\n          if (more) {\r\n            /* there are more recipes available on API */\r\n            from.current = from.current + 10\r\n            dispatch(fetchRecipes(query, true, from.current))\r\n          } else {\r\n            /* there are no recipes */\r\n            dispatch({\r\n              type: ActionsTypes.SET_ALERT,\r\n              payload: {\r\n                text: 'There are no more recipes matching the request.',\r\n                color: 'light'\r\n              }\r\n            })\r\n          }\r\n        } else {\r\n          /* user sent different req */\r\n          from.current = 0\r\n          queryString.current = query\r\n          dispatch(fetchRecipes(query, false, from.current))\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /* input handlers */\r\n  const handleSearchChange = (e: SyntheticEvent) => {\r\n    const target = e.target as HTMLInputElement\r\n    setSearch(target.value)\r\n  }\r\n\r\n  const handleDietChange = (e: SyntheticEvent) => {\r\n    const target = e.target as HTMLSelectElement\r\n    setDiet(target.value)\r\n  }\r\n\r\n  const handleCalRangeChange = (e: SyntheticEvent) => {\r\n    const target = e.target as HTMLInputElement\r\n    setCalories({\r\n      ...calories,\r\n      [target.name]: target.value\r\n    })\r\n  }\r\n\r\n  const handleHealthInputClick = (e: SyntheticEvent) => {\r\n    const target = e.target as HTMLInputElement\r\n    const stateValue = health[target.name as keyof HealthBoxes]\r\n    toggleHealth({\r\n      ...health,\r\n      [target.name]: !stateValue\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <UnregisterModal />\r\n      <Navigation />\r\n      <div className='container'>\r\n        <div className='row justify-content-center'>\r\n          <div className='col-md-8 col-lg-6'>\r\n            <h1 className='display-3 mt-5'>Browse recipes</h1>\r\n            <hr className='my-3' />\r\n            <form onSubmit={handleSubmit}>\r\n              <div className='input-group input-group-lg'>\r\n                <input\r\n                  type='text'\r\n                  className='form-control'\r\n                  placeholder='Search by ingredients'\r\n                  aria-label='Recipes search bar'\r\n                  onChange={handleSearchChange}\r\n                  value={search}\r\n                />\r\n                <div className='input-group-append'>\r\n                  <button\r\n                    className='btn btn-cool'\r\n                    type='submit'\r\n                    disabled={disabled}\r\n                    style={{ pointerEvents: disabled ? 'none' : 'auto' }}\r\n                  >\r\n                    <p>\r\n                      <i className='fas fa-search'></i>\r\n                    </p>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <small className='form-text text-muted mb-2'>\r\n                Please, separate the ingredients with spaces.\r\n              </small>\r\n              <button\r\n                className='btn btn-outline-success btn-sm'\r\n                type='button'\r\n                data-toggle='collapse'\r\n                data-target='#search-filters'\r\n                aria-expanded='false'\r\n                aria-controls='search-filters'\r\n                onClick={handleBtnOptClick}\r\n              >\r\n                {btnOptState ? 'Hide' : 'Show'} options\r\n              </button>\r\n              <div\r\n                id='search-filters'\r\n                className='bg-light p-2 mt-2 rounded collapse'\r\n              >\r\n                <div className='form-row'>\r\n                  <div className='col-12'>\r\n                    <a\r\n                      href='#diet-filter'\r\n                      data-target='#diet-filter'\r\n                      data-toggle='collapse'\r\n                      aria-expanded='false'\r\n                      aria-controls='diet-filter'\r\n                      role='button'\r\n                      className='text-decoration-none text-reset'\r\n                      onClick={handleDietClick}\r\n                    >\r\n                      <p className='lead mb-1'>\r\n                        Diet{' '}\r\n                        {dietFilState ? (\r\n                          <i className='fas fa-angle-down'></i>\r\n                        ) : (\r\n                          <i className='fas fa-angle-left'></i>\r\n                        )}\r\n                      </p>\r\n                    </a>\r\n\r\n                    <div id='diet-filter' className='input-group mb-2 collapse'>\r\n                      <select\r\n                        className='custom-select'\r\n                        onChange={handleDietChange}\r\n                        value={diet}\r\n                      >\r\n                        <option value='' defaultValue=''>\r\n                          Select a diet\r\n                        </option>\r\n                        <option value='balanced'>Balanced</option>\r\n                        <option value='high-protein'>High-protein</option>\r\n                        <option value='low-fat'>Low-fat</option>\r\n                        <option value='low-carb'>Low-carb</option>\r\n                      </select>\r\n                    </div>\r\n\r\n                    <a\r\n                      href='#cal-filter'\r\n                      data-target='#cal-filter'\r\n                      data-toggle='collapse'\r\n                      aria-expanded='false'\r\n                      aria-controls='cal-filter'\r\n                      role='button'\r\n                      className='text-decoration-none text-reset'\r\n                      onClick={handleCalClick}\r\n                    >\r\n                      <p className='lead mb-1'>\r\n                        Calories{' '}\r\n                        {calFilState ? (\r\n                          <i className='fas fa-angle-down'></i>\r\n                        ) : (\r\n                          <i className='fas fa-angle-left'></i>\r\n                        )}\r\n                      </p>\r\n                    </a>\r\n                    <div id='cal-filter' className='collapse'>\r\n                      <div className='input-group'>\r\n                        <div className='input-group-prepend'>\r\n                          <span className='input-group-text'>From</span>\r\n                        </div>\r\n                        <input\r\n                          name='from'\r\n                          type='number'\r\n                          aria-label='Calories range from'\r\n                          className='form-control'\r\n                          onChange={handleCalRangeChange}\r\n                          value={calories.from}\r\n                          step={1}\r\n                        />\r\n                        <div className='input-group-prepend'>\r\n                          <span className='input-group-text'>To</span>\r\n                        </div>\r\n                        <input\r\n                          name='to'\r\n                          type='number'\r\n                          aria-label='Calories range to'\r\n                          className='form-control'\r\n                          onChange={handleCalRangeChange}\r\n                          value={calories.to}\r\n                          step={1}\r\n                        />\r\n                      </div>\r\n                      <small className='form-text text-muted mb-2'>\r\n                        You can set a calorie range per serving. Please note,\r\n                        it's also possible to specify either min or max value by\r\n                        setting 'From' or 'To,' respectively.\r\n                      </small>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-12'>\r\n                    <a\r\n                      href='#health-filter'\r\n                      data-target='#health-filter'\r\n                      data-toggle='collapse'\r\n                      aria-expanded='false'\r\n                      aria-controls='health-filter'\r\n                      role='button'\r\n                      className='text-decoration-none text-reset'\r\n                      onClick={handleHealthClick}\r\n                    >\r\n                      <p className='lead mb-1'>\r\n                        Health labels{' '}\r\n                        {healthFilState ? (\r\n                          <i className='fas fa-angle-down'></i>\r\n                        ) : (\r\n                          <i className='fas fa-angle-left'></i>\r\n                        )}\r\n                      </p>\r\n                    </a>\r\n                    <div\r\n                      id='health-filter'\r\n                      className='form-group collapse mb-0'\r\n                    >\r\n                      <div className='custom-control custom-checkbox'>\r\n                        <input\r\n                          type='checkbox'\r\n                          className='custom-control-input'\r\n                          id='alcohol-free'\r\n                          name='alcohol-free'\r\n                          value={health['alcohol-free'].toString()}\r\n                          onClick={handleHealthInputClick}\r\n                        />\r\n                        <label\r\n                          className='custom-control-label'\r\n                          htmlFor='alcohol-free'\r\n                        >\r\n                          Alcohol-free\r\n                        </label>\r\n                      </div>\r\n\r\n                      <div className='custom-control custom-checkbox'>\r\n                        <input\r\n                          type='checkbox'\r\n                          className='custom-control-input'\r\n                          id='sugar-conscious'\r\n                          name='sugar-conscious'\r\n                          value={health['sugar-conscious'].toString()}\r\n                          onClick={handleHealthInputClick}\r\n                        />\r\n                        <label\r\n                          className='custom-control-label'\r\n                          htmlFor='sugar-conscious'\r\n                        >\r\n                          Sugar-conscious\r\n                        </label>\r\n                      </div>\r\n                      <div className='custom-control custom-checkbox'>\r\n                        <input\r\n                          type='checkbox'\r\n                          className='custom-control-input'\r\n                          id='vegan'\r\n                          name='vegan'\r\n                          value={health['vegan'].toString()}\r\n                          onClick={handleHealthInputClick}\r\n                        />\r\n                        <label className='custom-control-label' htmlFor='vegan'>\r\n                          Vegan\r\n                        </label>\r\n                      </div>\r\n                      <div className='custom-control custom-checkbox'>\r\n                        <input\r\n                          type='checkbox'\r\n                          className='custom-control-input'\r\n                          id='vegetarian'\r\n                          name='vegetarian'\r\n                          value={health['vegetarian'].toString()}\r\n                          onClick={handleHealthInputClick}\r\n                        />\r\n                        <label\r\n                          className='custom-control-label'\r\n                          htmlFor='vegetarian'\r\n                        >\r\n                          Vegetarian\r\n                        </label>\r\n                      </div>\r\n                      <div className='custom-control custom-checkbox'>\r\n                        <input\r\n                          type='checkbox'\r\n                          className='custom-control-input'\r\n                          id='tree-nut-free'\r\n                          name='tree-nut-free'\r\n                          value={health['tree-nut-free'].toString()}\r\n                          onClick={handleHealthInputClick}\r\n                        />\r\n                        <label\r\n                          className='custom-control-label'\r\n                          htmlFor='tree-nut-free'\r\n                        >\r\n                          Tree-nut-free\r\n                        </label>\r\n                      </div>\r\n                      <div className='custom-control custom-checkbox'>\r\n                        <input\r\n                          type='checkbox'\r\n                          className='custom-control-input'\r\n                          id='peanut-free'\r\n                          name='peanut-free'\r\n                          value={health['peanut-free'].toString()}\r\n                          onClick={handleHealthInputClick}\r\n                        />\r\n                        <label\r\n                          className='custom-control-label'\r\n                          htmlFor='peanut-free'\r\n                        >\r\n                          Peanut-free\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <RecipesList ids={recipesIds} />\r\n      {loading ? <Spinner /> : null}\r\n      <Alert />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nfunction makeListOfRecipesId(data: Recipe[] | null): string[] | null {\r\n  if (Array.isArray(data)) {\r\n    let listOfIds: string[] = []\r\n    if (data.length > 0) {\r\n      for (let rec of data) {\r\n        if (rec.clientSideId) {\r\n          listOfIds.push(rec.clientSideId)\r\n        }\r\n      }\r\n    }\r\n    return listOfIds\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n\r\nconst mapStateToProps: MapStateToProps<\r\n  SearchRecipesConnectedProps,\r\n  SearchRecipesOwnProps,\r\n  StoreState\r\n> = ({ recipes: { fetched, more, loading, error, infinite }, userActed }) => ({\r\n  recipesIds: makeListOfRecipesId(fetched),\r\n  userActed,\r\n  more,\r\n  loading,\r\n  error,\r\n  infinite\r\n})\r\n\r\nexport default connect(mapStateToProps)(SearchRecipes)\r\n","import React, {\r\n  FunctionComponent,\r\n  SyntheticEvent,\r\n  FormEvent,\r\n  useState,\r\n  useEffect\r\n} from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { connect, MapStateToProps } from 'react-redux'\r\nimport { StoreState, User, Error } from '../../store/reducers'\r\nimport { registerUser, RegisterCredentials } from '../../store/actions'\r\n\r\nexport enum Fields {\r\n  name = 'name',\r\n  email = 'email',\r\n  password = 'password',\r\n  confirm = 'confirm'\r\n}\r\n\r\ninterface OwnProps {}\r\n\r\ninterface RegisterProps {\r\n  user: User | null\r\n  loading: boolean\r\n  authenticated: boolean\r\n  error: Error | null\r\n  dispatch?: Function\r\n  userActed: boolean\r\n}\r\n\r\nconst Register: FunctionComponent<RegisterProps> = ({\r\n  user,\r\n  loading,\r\n  authenticated,\r\n  error,\r\n  dispatch,\r\n  userActed\r\n}) => {\r\n  const [userData, setUserdata] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    confirm: ''\r\n  })\r\n\r\n  const { name, email, password, confirm } = userData\r\n\r\n  useEffect(() => {\r\n    const $email = document.getElementById('email')\r\n    if ($email) {\r\n      if (userActed && !loading && error && error.status === 409) {\r\n        $email.classList.add('is-invalid')\r\n      }\r\n    }\r\n  }, [loading, error, userActed])\r\n\r\n  const handleChange = (e: SyntheticEvent) => {\r\n    const target = e.target as HTMLInputElement\r\n    const name = target.name\r\n    setUserdata(prevState => ({\r\n      ...prevState,\r\n      [name]: target.value\r\n    }))\r\n  }\r\n\r\n  const handleSubmit = (e: FormEvent) => {\r\n    e.preventDefault()\r\n\r\n    const $name = document.getElementById('name')\r\n    const $email = document.getElementById('email')\r\n    const $password = document.getElementById('password')\r\n    const $confirm = document.getElementById('confirm')\r\n\r\n    $name && $name.classList.add('is-valid')\r\n\r\n    if ($email) {\r\n      $email.classList.remove('is-invalid')\r\n      $email.classList.add('is-valid')\r\n    }\r\n\r\n    if (password !== confirm) {\r\n      if ($password && $confirm) {\r\n        $password.classList.remove('is-valid')\r\n        $confirm.classList.remove('is-valid')\r\n        $password.classList.add('is-invalid')\r\n        $confirm.classList.add('is-invalid')\r\n      }\r\n    } else {\r\n      if ($password && $confirm) {\r\n        $password.classList.remove('is-invalid')\r\n        $confirm.classList.remove('is-invalid')\r\n        $password.classList.add('is-valid')\r\n        $confirm.classList.add('is-valid')\r\n\r\n        /* passwords are matched */\r\n        const data: RegisterCredentials = { name, email, password }\r\n        if (dispatch) {\r\n          dispatch(registerUser(data))\r\n        }\r\n\r\n        /* credentials valid -> await authentication */\r\n        $name && $name.classList.remove('is-valid')\r\n        $email && $email.classList.remove('is-valid')\r\n        $password.classList.remove('is-valid')\r\n        $confirm.classList.remove('is-valid')\r\n      }\r\n    }\r\n  }\r\n\r\n  if (authenticated) {\r\n    return <Redirect to='/search' />\r\n  } else {\r\n    return (\r\n      <div className='background d-flex align-items-center'>\r\n        <div className='flex-grow-1 bg-white'>\r\n          <div className='container'>\r\n            <div className='row justify-content-center py-3'>\r\n              <div className='col-md-6'>\r\n                <h1 className='display-3'>Register</h1>\r\n                <hr className='my-3' />\r\n                <form id='register' onSubmit={handleSubmit}>\r\n                  <div className='form-group'>\r\n                    <label htmlFor='name'>Name</label>\r\n                    <input\r\n                      type='text'\r\n                      className='form-control'\r\n                      id='name'\r\n                      name={Fields.name}\r\n                      value={name}\r\n                      onChange={handleChange}\r\n                      minLength={2}\r\n                      required\r\n                    />\r\n                    <div className='valid-feedback'>Excellent!</div>\r\n                  </div>\r\n                  <div className='form-group'>\r\n                    <label htmlFor='email'>Email</label>\r\n                    <input\r\n                      type='email'\r\n                      className='form-control'\r\n                      id='email'\r\n                      name={Fields.email}\r\n                      value={email}\r\n                      onChange={handleChange}\r\n                      required\r\n                    />\r\n                    <div className='valid-feedback'>Excellent!</div>\r\n                    <div className='invalid-feedback'>\r\n                      Sorry, it looks like another user owns this email address.\r\n                    </div>\r\n                  </div>\r\n                  <div className='form-group'>\r\n                    <label htmlFor='password'>Password</label>\r\n                    <input\r\n                      type='password'\r\n                      className='form-control'\r\n                      id='password'\r\n                      name={Fields.password}\r\n                      value={password}\r\n                      onChange={handleChange}\r\n                      minLength={6}\r\n                      required\r\n                    />\r\n                    <div className='valid-feedback'>Excellent!</div>\r\n                    <div className='invalid-feedback'>\r\n                      Passwords don't match.\r\n                    </div>\r\n                  </div>\r\n                  <div className='form-group'>\r\n                    <label htmlFor='confirm'>Confirm password</label>\r\n                    <input\r\n                      type='password'\r\n                      className='form-control'\r\n                      id='confirm'\r\n                      name={Fields.confirm}\r\n                      value={confirm}\r\n                      onChange={handleChange}\r\n                      minLength={6}\r\n                      required\r\n                    />\r\n                    <div className='valid-feedback'>Excellent!</div>\r\n                  </div>\r\n                </form>\r\n                <button\r\n                  type='submit'\r\n                  className='btn btn-cool mr-1'\r\n                  form='register'\r\n                >\r\n                  <span\r\n                    className='spinner-border spinner-border-sm align-middle'\r\n                    role='status'\r\n                    aria-hidden='true'\r\n                    style={\r\n                      loading\r\n                        ? { display: 'inline-block' }\r\n                        : { display: 'none' }\r\n                    }\r\n                  ></span>{' '}\r\n                  <p>Submit</p>\r\n                </button>\r\n                <Link to='/' className='btn btn-cool btn-cool-cancel'>\r\n                  <p>Go Back</p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps: MapStateToProps<RegisterProps, OwnProps, StoreState> = ({\r\n  profile: { user, loading, authenticated, error },\r\n  userActed\r\n}) => ({\r\n  user,\r\n  loading,\r\n  authenticated,\r\n  error,\r\n  userActed\r\n})\r\n\r\nexport default connect(mapStateToProps)(Register)\r\n","interface Data {\r\n  garnishes: string[]\r\n  mains: string[]\r\n  sides: string[]\r\n}\r\n\r\nexport const generateRandomSearch = () => {\r\n  const data: Data = {\r\n    garnishes: [\r\n      'rice',\r\n      'potato',\r\n      'beans',\r\n      'asparagus',\r\n      'quinoa',\r\n      'yam',\r\n      'pasta',\r\n      'buckwheat',\r\n      'couscous',\r\n      'lentil'\r\n    ],\r\n    mains: [\r\n      'chicken',\r\n      'beef',\r\n      'pork',\r\n      'fish',\r\n      'turkey',\r\n      'shrimps',\r\n      'squid',\r\n      'crab',\r\n      'mussel',\r\n      'duck'\r\n    ],\r\n    sides: [\r\n      'cucumber',\r\n      'tomato',\r\n      'brussels sprouts',\r\n      'zucchini',\r\n      'eggplant',\r\n      'bell pepper',\r\n      'pumpkin',\r\n      'broccoli',\r\n      'carrot',\r\n      'beet'\r\n    ]\r\n  }\r\n\r\n  const possibleNumbers = [1, 2, 3]\r\n  const index = Math.floor(Math.random() * 3)\r\n  const numOfElements = possibleNumbers[index]\r\n\r\n  const fields = ['garnishes', 'mains', 'sides']\r\n  const memory: ['garnishes'?, 'mains'?, 'sides'?] = []\r\n\r\n  while (memory.length !== numOfElements) {\r\n    const index = Math.floor(Math.random() * 3)\r\n    const field = fields[index] as keyof Data\r\n    if (!memory.includes(field)) {\r\n      memory.push(field)\r\n    }\r\n  }\r\n\r\n  let search = ''\r\n  memory.forEach(field => {\r\n    const set = data[field as keyof Data]\r\n    const index = Math.floor(Math.random() * 10)\r\n    if (!search) {\r\n      search = set[index]\r\n    } else {\r\n      search = search + ` ${set[index]}`\r\n    }\r\n  })\r\n\r\n  return search\r\n}\r\n","interface AnalysisResult {\r\n  calories: number\r\n  totalWeight: number\r\n  totalNutrientsKCal: {\r\n    ENERC_KCAL: Spec\r\n    PROCNT_KCAL: Spec\r\n    FAT_KCAL: Spec\r\n    CHOCDF_KCAL: Spec\r\n  }\r\n}\r\n\r\ninterface Spec {\r\n  label: string\r\n  quantity: number\r\n  unit: string\r\n}\r\n\r\nexport interface ParsedAnalysisResult {\r\n  totalCal: number\r\n  proteinCalTotal: number\r\n  fatCalTotal: number\r\n  carbsCalTotal: number\r\n  calPer100g: number\r\n  proteinCalPer100: number\r\n  fatCalPer100: number\r\n  carbsCalPer100: number\r\n  totalRatio: {\r\n    protein: number\r\n    fat: number\r\n    carbs: number\r\n  }\r\n}\r\n\r\nexport const parseAnalysisResult = (\r\n  data: AnalysisResult\r\n): ParsedAnalysisResult => {\r\n  const {\r\n    calories: totalCal,\r\n    totalWeight,\r\n    totalNutrientsKCal: { PROCNT_KCAL, FAT_KCAL, CHOCDF_KCAL }\r\n  } = data\r\n\r\n  const calPer100g = (totalCal * 100) / totalWeight\r\n\r\n  /* calculating % ratio total */\r\n  let calInOnePercent = totalCal / 100\r\n  const calFromProtPercent = PROCNT_KCAL.quantity / calInOnePercent\r\n  const calFromFatPercent = FAT_KCAL.quantity / calInOnePercent\r\n  const calFromCarbsPercent = CHOCDF_KCAL.quantity / calInOnePercent\r\n\r\n  /* calculating nutrient amounts per 100g */\r\n  calInOnePercent = calPer100g / 100\r\n  const proteinCalPer100 = calFromProtPercent * calInOnePercent\r\n  const fatCalPer100 = calFromFatPercent * calInOnePercent\r\n  const carbsCalPer100 = calFromCarbsPercent * calInOnePercent\r\n\r\n  return {\r\n    totalCal: Math.round(totalCal),\r\n    proteinCalTotal: Math.round(PROCNT_KCAL.quantity),\r\n    fatCalTotal: Math.round(FAT_KCAL.quantity),\r\n    carbsCalTotal: Math.round(CHOCDF_KCAL.quantity),\r\n    calPer100g: Math.round(calPer100g),\r\n    proteinCalPer100: Math.round(proteinCalPer100),\r\n    fatCalPer100: Math.round(fatCalPer100),\r\n    carbsCalPer100: Math.round(carbsCalPer100),\r\n    totalRatio: {\r\n      protein: Math.round(calFromProtPercent),\r\n      fat: Math.round(calFromFatPercent),\r\n      carbs: Math.round(calFromCarbsPercent)\r\n    }\r\n  }\r\n}\r\n","import React, { FunctionComponent } from 'react'\r\nimport { ParsedAnalysisResult } from '../../utils/parseAnalysis'\r\n\r\ninterface AnalysisModalProps {\r\n  title: string\r\n  data: ParsedAnalysisResult\r\n}\r\n\r\nexport const AnalysisModal: FunctionComponent<AnalysisModalProps> = ({\r\n  title,\r\n  data\r\n}) => {\r\n  const {\r\n    totalCal,\r\n    proteinCalTotal,\r\n    fatCalTotal,\r\n    carbsCalTotal,\r\n    calPer100g,\r\n    proteinCalPer100,\r\n    fatCalPer100,\r\n    carbsCalPer100,\r\n    totalRatio\r\n  } = data\r\n\r\n  return (\r\n    <div\r\n      className='modal fade'\r\n      id='analysisModal'\r\n      tabIndex={-1}\r\n      role='dialog'\r\n      aria-labelledby='analysisModalTitle'\r\n      aria-hidden='true'\r\n    >\r\n      <div className='modal-dialog modal-dialog-centered' role='document'>\r\n        <div className='modal-content'>\r\n          <div className='modal-header'>\r\n            <h5 className='modal-title' id='analysisModalTitle'>\r\n              Analysis results\r\n            </h5>\r\n            <button\r\n              type='button'\r\n              className='close'\r\n              data-dismiss='modal'\r\n              aria-label='Close'\r\n            >\r\n              <span aria-hidden='true'>&times;</span>\r\n            </button>\r\n          </div>\r\n\r\n          <div className='modal-body'>\r\n            <p>\r\n              It looks like the ratio of energy sources in the recipe '{title}'\r\n              is {totalRatio.protein}% protein, {totalRatio.fat}% fat, and{' '}\r\n              {totalRatio.carbs}% carbs.\r\n            </p>\r\n            <p>\r\n              USDA recommends adhering to 10-35% protein, 20-35% fat, and 45-65%\r\n              carbs in your daily calorie consumption.*\r\n            </p>\r\n\r\n            <div className='container-fluid px-0'>\r\n              <div className='row justify-content-center no-gutters'>\r\n                <div className='col'>\r\n                  <table className='table table-sm table-striped table-borderless '>\r\n                    <tbody>\r\n                      <tr>\r\n                        <td>\r\n                          <strong>Total kcal</strong>\r\n                        </td>\r\n                        <td>\r\n                          <strong>{totalCal}</strong>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>from protein</td>\r\n                        <td>{proteinCalTotal}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>from fat</td>\r\n                        <td>{fatCalTotal}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>from carbs</td>\r\n                        <td>{carbsCalTotal}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>\r\n                          <strong>Kcal per 100g</strong>\r\n                        </td>\r\n                        <td>\r\n                          <strong>{calPer100g}</strong>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>from protein</td>\r\n                        <td>{proteinCalPer100}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>from fat</td>\r\n                        <td>{fatCalPer100}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>from carbs</td>\r\n                        <td>{carbsCalPer100}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <p className='small text-muted'>\r\n              *Please note, planning a proper diet depends on a variety of\r\n              factors, including environment specifics, fitness goals, and\r\n              health characteristics. It is wise to consult a medical specialist\r\n              in some cases.\r\n            </p>\r\n          </div>\r\n\r\n          <div className='modal-footer'>\r\n            <button\r\n              type='button'\r\n              className='btn btn-cool btn-cool-cancel'\r\n              data-dismiss='modal'\r\n            >\r\n              <p>Close</p>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {\r\n  Fragment,\r\n  FunctionComponent,\r\n  useState,\r\n  SyntheticEvent,\r\n  FormEvent,\r\n  useEffect\r\n} from 'react'\r\nimport axios, { AxiosRequestConfig, AxiosResponse } from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { Dispatch } from 'redux'\r\nimport { AlertActions, ActionsTypes } from '../../store/reducers'\r\nimport { Error } from '../../store/reducers'\r\nimport {\r\n  ParsedAnalysisResult,\r\n  parseAnalysisResult\r\n} from '../../utils/parseAnalysis'\r\nimport Navigation from '../helpers/Navigation'\r\nimport UnregisterModal from '../modals/UnregisterModal'\r\nimport { AnalysisModal } from '../modals/AnalysisModal'\r\nimport Alert from '../helpers/Alert'\r\n\r\ninterface RecAnalysisConnectedProps {\r\n  dispatch: Dispatch<AlertActions>\r\n}\r\n\r\nconst placeholder =\r\n  '300g fried chicken,\\n200g boiled rice,\\n3 tomatoes,\\n4 cucumbers,\\n1 tablespoon olive oil'\r\n\r\nconst RecipeAnalysis: FunctionComponent<RecAnalysisConnectedProps> = ({\r\n  dispatch\r\n}) => {\r\n  const [data, setData] = useState({\r\n    title: '',\r\n    ingr: ''\r\n  })\r\n\r\n  const [loading, setLoading] = useState(false)\r\n  const [submitDisabled, setSubmitDisabled] = useState(true)\r\n  const [resultDisabled, setResultDisabled] = useState(true)\r\n  const [error, setError] = useState<Error | null>(null)\r\n  const [result, setResult] = useState<ParsedAnalysisResult | null>(null)\r\n\r\n  const { title, ingr } = data\r\n\r\n  useEffect(() => {\r\n    if (title === '' || ingr === '') {\r\n      setSubmitDisabled(true)\r\n    } else {\r\n      setSubmitDisabled(false)\r\n    }\r\n  }, [data])\r\n\r\n  useEffect(() => {\r\n    if (!result) {\r\n      setResultDisabled(true)\r\n    } else {\r\n      setResultDisabled(false)\r\n      dispatch({\r\n        type: ActionsTypes.SET_ALERT,\r\n        payload: {\r\n          text: \"You can now hit the 'Result' button to view nutrition data.\",\r\n          color: 'success'\r\n        }\r\n      })\r\n    }\r\n  }, [result])\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      const { status } = error\r\n      if (status === 422 || status === 555 || status === 404) {\r\n        dispatch({\r\n          type: ActionsTypes.SET_ALERT,\r\n          payload: {\r\n            text:\r\n              'Please, check the recipe text for accidental typos or missing commas between the ingredients and try again.',\r\n            color: 'danger'\r\n          }\r\n        })\r\n      } else {\r\n        dispatch({\r\n          type: ActionsTypes.SET_ALERT,\r\n          payload: {\r\n            text:\r\n              'It looks like there is a problem with the server. Please, try again later.',\r\n            color: 'danger'\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }, [error])\r\n\r\n  const handleChange = (e: SyntheticEvent) => {\r\n    const target = e.target as HTMLInputElement\r\n    const name = target.name\r\n    setData(prevState => ({\r\n      ...prevState,\r\n      [name]: target.value\r\n    }))\r\n  }\r\n\r\n  const handleSubmit = async (e: FormEvent): Promise<void> => {\r\n    e.preventDefault()\r\n    if (title !== '' && ingr !== '') {\r\n      try {\r\n        const config: AxiosRequestConfig = {\r\n          url: 'api/recipes/analysis/recipe',\r\n          method: 'POST',\r\n          data\r\n        }\r\n        setLoading(true)\r\n        const response = await axios(config)\r\n        if (response.status === 200) {\r\n          const result = parseAnalysisResult(response.data)\r\n          setResult(result)\r\n          setLoading(false)\r\n          return\r\n        }\r\n      } catch (err) {\r\n        const response: AxiosResponse | undefined = err.response\r\n        if (response) {\r\n          /* got response from server */\r\n          if (\r\n            response.status === 422 ||\r\n            response.status === 404 ||\r\n            response.status === 555 ||\r\n            response.status === 500 ||\r\n            response.status === 401\r\n          ) {\r\n            setError({ error: response.data.error, status: response.status })\r\n            setLoading(false)\r\n            return\r\n          } else {\r\n            setError({ error: 'Something went wrong', status: response.status })\r\n            setLoading(false)\r\n            return\r\n          }\r\n        } else {\r\n          /* no response from server */\r\n          setError({ error: 'Something went wrong', status: undefined })\r\n          setLoading(false)\r\n          return\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <UnregisterModal />\r\n      {result && <AnalysisModal title={data.title.trim()} data={result} />}\r\n      <Navigation />\r\n      <div className='container'>\r\n        <div className='row justify-content-center'>\r\n          <div className='col-md-8 col-lg-6'>\r\n            <h1 className='display-3 mt-5'>Analyze recipe</h1>\r\n            <hr className='my-3' />\r\n            <form onSubmit={handleSubmit}>\r\n              <div className='form-group'>\r\n                <label htmlFor='title'>Title</label>\r\n                <input\r\n                  type='text'\r\n                  className='form-control'\r\n                  placeholder='My evening meal'\r\n                  name='title'\r\n                  value={title}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className='form-group'>\r\n                <label htmlFor='text'>\r\n                  Ingredients with measure or quantity\r\n                </label>\r\n                <textarea\r\n                  id='text'\r\n                  name='ingr'\r\n                  className='form-control'\r\n                  rows={8}\r\n                  placeholder={placeholder}\r\n                  value={ingr}\r\n                  onChange={handleChange}\r\n                  required\r\n                ></textarea>\r\n                <small className='form-text text-muted'>\r\n                  *Please, separate the ingredients with commas.\r\n                </small>\r\n              </div>\r\n              <button\r\n                type='submit'\r\n                className='btn btn-cool mr-1'\r\n                disabled={submitDisabled}\r\n                style={{ pointerEvents: submitDisabled ? 'none' : 'auto' }}\r\n              >\r\n                <span\r\n                  className='spinner-border spinner-border-sm align-middle'\r\n                  role='status'\r\n                  aria-hidden='true'\r\n                  style={\r\n                    loading ? { display: 'inline-block' } : { display: 'none' }\r\n                  }\r\n                ></span>{' '}\r\n                <p>Submit</p>\r\n              </button>\r\n              <button\r\n                type='button'\r\n                className='btn btn-cool'\r\n                data-toggle='modal'\r\n                data-target='#analysisModal'\r\n                disabled={resultDisabled}\r\n                style={{ pointerEvents: resultDisabled ? 'none' : 'auto' }}\r\n              >\r\n                <p>Results</p>\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Alert />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default connect()(RecipeAnalysis)\r\n","import React, { FunctionComponent, SyntheticEvent, useEffect } from 'react'\r\nimport uuid from 'uuid/v1'\r\nimport { connect, MapStateToProps } from 'react-redux'\r\nimport { StoreState } from '../../store/reducers'\r\nimport { deleteCollectionItem } from '../../store/actions'\r\n\r\ninterface CollectedRecipeOwnProps {\r\n  id: string\r\n}\r\n\r\ninterface CollectedRecipeConnectedProps {\r\n  id: string\r\n  label: string\r\n  image: string\r\n  url: string\r\n  calTotal: number\r\n  calPerServing: number\r\n  calPer100g: number\r\n  ingredientLines: string[]\r\n  dispatch?: Function\r\n}\r\n\r\nconst CollectedRecipe: FunctionComponent<CollectedRecipeConnectedProps> = ({\r\n  id,\r\n  label,\r\n  image,\r\n  url,\r\n  calTotal,\r\n  calPerServing,\r\n  calPer100g,\r\n  ingredientLines,\r\n  dispatch\r\n}) => {\r\n  const titleId = uuid()\r\n  const overviewId = uuid()\r\n  const overviewIdData = uuid()\r\n  const titleIdData = uuid()\r\n  const imgFixedId = uuid()\r\n  const cardId = uuid()\r\n  let initialBackgroundSize: string\r\n\r\n  if (window.innerWidth > 992) {\r\n    initialBackgroundSize = '50%'\r\n  } else {\r\n    initialBackgroundSize = '100%'\r\n  }\r\n\r\n  useEffect(() => {\r\n    const handler = () => {\r\n      const imgFixed = document.getElementById(imgFixedId)\r\n      if (imgFixed) {\r\n        if (window.innerWidth > 992) {\r\n          imgFixed.style.backgroundSize = '50%'\r\n        }\r\n\r\n        if (window.innerWidth < 992) {\r\n          imgFixed.style.backgroundSize = '100%'\r\n        }\r\n      }\r\n    }\r\n\r\n    window.addEventListener('resize', handler)\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handler)\r\n    }\r\n  }, [])\r\n\r\n  const handleClick = (e: SyntheticEvent) => {\r\n    const target = e.target as HTMLButtonElement\r\n    if (target.name === 'title') {\r\n      const overview = document.getElementById(overviewId)\r\n      if (overview) {\r\n        if (!target.classList.contains('active-custom')) {\r\n          target.classList.add('active-custom')\r\n          overview.classList.remove('active-custom')\r\n\r\n          const overviewData = document.getElementById(overviewIdData)\r\n          const titleData = document.getElementById(titleIdData)\r\n          if (overviewData && titleData) {\r\n            titleData.style.display = 'block'\r\n            overviewData.style.display = 'none'\r\n          }\r\n        }\r\n      }\r\n    } else if (target.name === 'overview') {\r\n      const title = document.getElementById(titleId)\r\n      if (title) {\r\n        if (!target.classList.contains('active-custom')) {\r\n          target.classList.add('active-custom')\r\n          title.classList.remove('active-custom')\r\n\r\n          const overviewData = document.getElementById(overviewIdData)\r\n          const titleData = document.getElementById(titleIdData)\r\n          if (overviewData && titleData) {\r\n            overviewData.style.display = 'block'\r\n            titleData.style.display = 'none'\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleDelete = (e: SyntheticEvent) => {\r\n    const card = document.getElementById(cardId)\r\n    if (dispatch && card) {\r\n      dispatch(deleteCollectionItem(id))\r\n      card.classList.add('fadeOutLeftBig')\r\n    }\r\n  }\r\n\r\n  if (!id) {\r\n    return null\r\n  } else {\r\n    return (\r\n      <div id={cardId} className='card mb-3 animated fadeIn'>\r\n        <div className='card-header'>\r\n          <button\r\n            id={titleId}\r\n            name='title'\r\n            className='btn btn-link btn-sm mr-1 text-decoration-none active-custom'\r\n            onClick={handleClick}\r\n          >\r\n            Title\r\n          </button>\r\n          <button\r\n            id={overviewId}\r\n            name='overview'\r\n            className='btn btn-link btn-sm text-decoration-none'\r\n            onClick={handleClick}\r\n          >\r\n            Overview\r\n          </button>\r\n        </div>\r\n        <div\r\n          id={overviewIdData}\r\n          className='card-body'\r\n          style={{ display: 'none' }}\r\n        >\r\n          <table className='table table-striped table-borderless'>\r\n            <tbody>\r\n              {ingredientLines.length > 0 &&\r\n                ingredientLines.map((line, index) => (\r\n                  <tr key={index}>\r\n                    <td>{line}</td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </table>\r\n          <small className='text-muted'>\r\n            Calories: {calTotal} total, {calPerServing} per serving,{' '}\r\n            {calPer100g} per 100g\r\n          </small>\r\n        </div>\r\n\r\n        <div id={titleIdData} className='card-body p-0'>\r\n          <div\r\n            id={imgFixedId}\r\n            style={{\r\n              background: `url(${image})`,\r\n              backgroundRepeat: 'no-repeat',\r\n              backgroundSize: initialBackgroundSize,\r\n              backgroundOrigin: 'border-box',\r\n              backgroundAttachment: 'fixed',\r\n              backgroundPosition: 'center'\r\n            }}\r\n          >\r\n            <div className='row'>\r\n              <div className='col'>\r\n                <div\r\n                  className='card-body bg-white'\r\n                  style={{ marginTop: '6rem' }}\r\n                >\r\n                  <h1 className='card-title display-4 m-0'>{label}</h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='card-footer'>\r\n          <a\r\n            href={url}\r\n            target='_blank'\r\n            rel='noopener noreferrer'\r\n            className='btn btn-outline-primary btn-sm mr-1'\r\n          >\r\n            Instructions <i className='fas fa-external-link-alt fa-sm'></i>\r\n          </a>\r\n          <button\r\n            type='button'\r\n            className='btn btn-outline-primary btn-sm'\r\n            onClick={handleDelete}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps: MapStateToProps<\r\n  CollectedRecipeConnectedProps,\r\n  CollectedRecipeOwnProps,\r\n  StoreState\r\n> = ({ profile: { user } }, { id }) => {\r\n  try {\r\n    if (user) {\r\n      if (user.recipes.length > 0) {\r\n        const recipe = user.recipes.find(recipe => recipe._id === id)\r\n        if (recipe) {\r\n          return {\r\n            id: recipe._id,\r\n            label: recipe.label,\r\n            image: recipe.image,\r\n            url: recipe.url,\r\n            calTotal: Math.round(recipe.calories),\r\n            calPerServing: Math.round(recipe.calories / recipe.yield),\r\n            calPer100g: Math.round(\r\n              (recipe.calories * 100) / recipe.totalWeight\r\n            ),\r\n            ingredientLines: recipe.ingredientLines\r\n          }\r\n        } else {\r\n          throw new Error()\r\n        }\r\n      } else {\r\n        throw new Error()\r\n      }\r\n    } else {\r\n      throw new Error()\r\n    }\r\n  } catch (err) {\r\n    return {\r\n      id: '',\r\n      label: '',\r\n      image: '',\r\n      url: '',\r\n      calTotal: 0,\r\n      calPerServing: 0,\r\n      calPer100g: 0,\r\n      ingredientLines: []\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CollectedRecipe)\r\n","import React, { FunctionComponent, Fragment } from 'react'\r\nimport CollectedRecipe from './CollectedRecipe'\r\n\r\ninterface CollectionListOwnProps {\r\n  ids: string[]\r\n}\r\n\r\nexport const CollectionList: FunctionComponent<CollectionListOwnProps> = ({\r\n  ids\r\n}) => {\r\n  if (ids.length > 0) {\r\n    return (\r\n      <div className='container mt-3'>\r\n        <div className='row justify-content-center'>\r\n          {ids.map(id => (\r\n            <Fragment key={id}>\r\n              <div className='col-md-8 col-lg-6'>\r\n                <CollectedRecipe id={id} />\r\n              </div>\r\n              <div className='col-12'></div>\r\n            </Fragment>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n","import React, { FunctionComponent } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { deleteCollection } from '../../store/actions'\r\n\r\ninterface CollectionModalConnectedProps {\r\n  dispatch: Function\r\n}\r\n\r\nconst CollectionModal: FunctionComponent<CollectionModalConnectedProps> = ({\r\n  dispatch\r\n}) => {\r\n  const handleDelete = () => {\r\n    if (dispatch) {\r\n      const cards = document.getElementsByClassName('card')\r\n      const length = cards.length\r\n      if (length > 0) {\r\n        for (let i = 0; i < length; i++) {\r\n          cards[i].className = cards[i].className + ' fadeOut'\r\n        }\r\n        dispatch(deleteCollection())\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className='modal fade'\r\n      id='collectionModal'\r\n      tabIndex={-1}\r\n      role='dialog'\r\n      aria-labelledby='collectionModalTitle'\r\n      aria-hidden='true'\r\n    >\r\n      <div className='modal-dialog modal-dialog-centered' role='document'>\r\n        <div className='modal-content'>\r\n          <div className='modal-header'>\r\n            <h5 className='modal-title' id='collectionModalTitle'>\r\n              Collection Deletion\r\n            </h5>\r\n            <button\r\n              type='button'\r\n              className='close'\r\n              data-dismiss='modal'\r\n              aria-label='Close'\r\n            >\r\n              <span aria-hidden='true'>&times;</span>\r\n            </button>\r\n          </div>\r\n\r\n          <div className='modal-body'>\r\n            <p className='lead'>\r\n              If you want to erase all your saved recipes permanently, please\r\n              hit 'Submit.'\r\n            </p>\r\n          </div>\r\n\r\n          <div className='modal-footer'>\r\n            <button\r\n              type='button'\r\n              className='btn btn-cool'\r\n              data-toggle='modal'\r\n              data-target='#collectionModal'\r\n              onClick={handleDelete}\r\n            >\r\n              <p>Submit</p>\r\n            </button>\r\n            <button\r\n              type='button'\r\n              className='btn btn-cool btn-cool-cancel'\r\n              data-dismiss='modal'\r\n            >\r\n              <p>Cancel</p>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect()(CollectionModal)\r\n","import React, {\r\n  Fragment,\r\n  FunctionComponent,\r\n  useState,\r\n  useEffect,\r\n  SyntheticEvent\r\n} from 'react'\r\nimport Navigation from '../helpers/Navigation'\r\nimport UnregisterModal from '../modals/UnregisterModal'\r\nimport { CollectionList } from './CollectionList'\r\nimport Alert from '../helpers/Alert'\r\nimport CollectionModal from '../modals/CollectionModal'\r\nimport { connect, MapStateToProps } from 'react-redux'\r\nimport { StoreState } from '../../store/reducers'\r\n\r\ninterface CollectionOwnProps {}\r\n\r\ninterface CollectionConnectedProps {\r\n  recipesData: RecipeData[] | null\r\n}\r\n\r\ntype RecipeData = { id: string; ingr: string[] }\r\n\r\nconst recipesFilter = (data: RecipeData[] | null, input: string): string[] => {\r\n  if (data) {\r\n    if (data.length > 0) {\r\n      if (input) {\r\n        /* input provided -> filter ids */\r\n        const normalized = input\r\n          .toLowerCase()\r\n          .split(' ')\r\n          .map(ingr => ingr.trim())\r\n\r\n        const filtered = data.filter(item => {\r\n          const ingredients = item.ingr.join('').toLowerCase()\r\n          return normalized.every(ingr => ingredients.includes(ingr))\r\n        })\r\n\r\n        if (filtered.length > 0) {\r\n          return filtered.map(recipe => recipe.id)\r\n        } else {\r\n          return []\r\n        }\r\n      } else {\r\n        /* no input provided -> return all ids */\r\n        return data.map(recipe => recipe.id)\r\n      }\r\n    } else {\r\n      return []\r\n    }\r\n  } else {\r\n    return []\r\n  }\r\n}\r\n\r\nconst Collection: FunctionComponent<CollectionConnectedProps> = ({\r\n  recipesData\r\n}) => {\r\n  const [input, setInput] = useState('')\r\n\r\n  const handleChange = (e: SyntheticEvent) => {\r\n    const target = e.target as HTMLInputElement\r\n    setInput(target.value)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <CollectionModal />\r\n      <UnregisterModal />\r\n      <Navigation />\r\n      <div className='container'>\r\n        <div className='row justify-content-center'>\r\n          <div className='col-md-8 col-lg-6'>\r\n            <h1 className='display-3 mt-5'>Gathered recipes</h1>\r\n            <hr className='my-3' />\r\n            <form>\r\n              <div className='input-group input-group-lg'>\r\n                <input\r\n                  type='text'\r\n                  className='form-control'\r\n                  placeholder='Search by ingredients'\r\n                  aria-label='Recipes search bar'\r\n                  onChange={handleChange}\r\n                  value={input}\r\n                />\r\n                <div className='input-group-append'>\r\n                  <div className='input-group-text'>\r\n                    <i className='fas fa-search'></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <small className='form-text text-muted mb-2'>\r\n                Please, separate the ingredients with spaces.\r\n              </small>\r\n              <button\r\n                className='btn btn-outline-primary btn-sm'\r\n                type='button'\r\n                data-toggle='modal'\r\n                data-target='#collectionModal'\r\n              >\r\n                Delete collection\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <CollectionList ids={recipesFilter(recipesData, input)} />\r\n      <Alert />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps: MapStateToProps<\r\n  CollectionConnectedProps,\r\n  CollectionOwnProps,\r\n  StoreState\r\n> = ({ profile: { user } }) => {\r\n  if (user) {\r\n    if (user.recipes.length > 0) {\r\n      return {\r\n        recipesData: user.recipes.map(recipe => {\r\n          return { id: recipe._id, ingr: recipe.ingredientLines }\r\n        })\r\n      }\r\n    } else {\r\n      return {\r\n        recipesData: null\r\n      }\r\n    }\r\n  } else {\r\n    return {\r\n      recipesData: null\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Collection)\r\n","import React, {\r\n  Fragment,\r\n  FunctionComponent,\r\n  useState,\r\n  SyntheticEvent,\r\n  FormEvent,\r\n  useEffect\r\n} from 'react'\r\nimport { connect, MapStateToProps } from 'react-redux'\r\nimport Navigation from '../helpers/Navigation'\r\nimport { Fields } from '../public/Register'\r\nimport { StoreState, User } from '../../store/reducers'\r\nimport { updateSanitizer } from '../../utils/sanitizers'\r\nimport { ActionsTypes, Error } from '../../store/reducers'\r\nimport { updateUser } from '../../store/actions'\r\nimport UnregisterModal from '../modals/UnregisterModal'\r\nimport Alert from '../helpers/Alert'\r\n\r\ninterface ChangeCredConnectedProps {\r\n  loading: boolean\r\n  user: User | null\r\n  userActed: boolean\r\n  dispatch?: Function\r\n  error: Error | null\r\n}\r\n\r\ninterface ChangeCredOwnProps {}\r\n\r\nexport interface CredFormData {\r\n  name: string\r\n  email: string\r\n  password: string\r\n}\r\n\r\nconst ChangeCredentials: FunctionComponent<ChangeCredConnectedProps> = ({\r\n  loading,\r\n  user,\r\n  userActed,\r\n  dispatch,\r\n  error\r\n}) => {\r\n  const [userData, setUserData] = useState<CredFormData>({\r\n    name: '',\r\n    email: '',\r\n    password: ''\r\n  })\r\n\r\n  const [disabled, setDisabled] = useState(true)\r\n\r\n  const { name, email, password } = userData\r\n\r\n  useEffect(() => {\r\n    if (dispatch) {\r\n      dispatch({\r\n        type: ActionsTypes.USER_ACTED_FALSE\r\n      })\r\n    }\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    const $email = document.getElementById('email')\r\n    if ($email) {\r\n      $email.classList.remove('is-invalid')\r\n      if (userActed && !loading && error && error.status === 409) {\r\n        $email.classList.add('is-invalid')\r\n      }\r\n    }\r\n  }, [userActed, loading, error])\r\n\r\n  useEffect(() => {\r\n    if (name === '' && email === '' && password === '') {\r\n      setDisabled(true)\r\n      const $email = document.getElementById('email')\r\n      if ($email) {\r\n        $email.classList.remove('is-invalid')\r\n      }\r\n    } else {\r\n      setDisabled(false)\r\n    }\r\n  }, [userData])\r\n\r\n  const handleChange = (e: SyntheticEvent) => {\r\n    const target = e.target as HTMLInputElement\r\n    const name = target.name\r\n    setUserData(prevState => ({\r\n      ...prevState,\r\n      [name]: target.value\r\n    }))\r\n  }\r\n\r\n  const handleSubmit = (e: FormEvent) => {\r\n    e.preventDefault()\r\n    const data = updateSanitizer(userData)\r\n    if (data) {\r\n      if (dispatch) {\r\n        dispatch(updateUser(data))\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <UnregisterModal />\r\n      <Navigation />\r\n      <div className='container'>\r\n        <div className='row justify-content-center'>\r\n          <div className='col-md-8 col-lg-6'>\r\n            <h1 className='display-3 mt-5'>Update your data</h1>\r\n            <hr className='my-3' />\r\n            <form onSubmit={handleSubmit}>\r\n              <div className='form-group'>\r\n                <label htmlFor='name'>New name</label>\r\n                <input\r\n                  type='text'\r\n                  className='form-control'\r\n                  id='name'\r\n                  placeholder={user ? user.name : 'no data'}\r\n                  name={Fields.name}\r\n                  value={name}\r\n                  minLength={2}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n              <div className='form-group'>\r\n                <label htmlFor='email'>New email address</label>\r\n                <input\r\n                  type='email'\r\n                  className='form-control'\r\n                  id='email'\r\n                  placeholder={user ? user.email : 'no data'}\r\n                  name={Fields.email}\r\n                  value={email}\r\n                  onChange={handleChange}\r\n                />\r\n                <div className='invalid-feedback'>\r\n                  Sorry, it looks like another user owns this email address.\r\n                </div>\r\n              </div>\r\n              <div className='form-group'>\r\n                <label htmlFor='password'>New password</label>\r\n                <input\r\n                  type='password'\r\n                  className='form-control'\r\n                  id='password'\r\n                  placeholder='******'\r\n                  name={Fields.password}\r\n                  minLength={6}\r\n                  value={password}\r\n                  onChange={handleChange}\r\n                />\r\n                <small className='form-text text-muted'>\r\n                  *All form fields are optional.\r\n                </small>\r\n              </div>\r\n\r\n              <button\r\n                id='submit'\r\n                type='submit'\r\n                className='btn btn-cool'\r\n                disabled={disabled}\r\n                style={{ pointerEvents: disabled ? 'none' : 'auto' }}\r\n              >\r\n                <span\r\n                  className='spinner-border spinner-border-sm align-middle'\r\n                  role='status'\r\n                  aria-hidden='true'\r\n                  style={\r\n                    loading && userActed\r\n                      ? { display: 'inline-block' }\r\n                      : { display: 'none' }\r\n                  }\r\n                ></span>{' '}\r\n                <p>Submit</p>\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Alert />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps: MapStateToProps<\r\n  ChangeCredConnectedProps,\r\n  ChangeCredOwnProps,\r\n  StoreState\r\n> = ({ profile: { user, loading, error }, userActed }) => ({\r\n  loading,\r\n  user,\r\n  userActed,\r\n  error\r\n})\r\n\r\nexport default connect(mapStateToProps)(ChangeCredentials)\r\n","import { CredFormData } from '../components/private/ChangeCredentials'\r\n\r\nexport interface Sanitized {\r\n  newName?: string\r\n  newEmail?: string\r\n  newPassword?: string\r\n}\r\n\r\nexport const updateSanitizer: (\r\n  input: CredFormData\r\n) => Sanitized | null = input => {\r\n  const data: Sanitized = {}\r\n\r\n  Object.keys(input).forEach(key => {\r\n    if (input[key as keyof CredFormData].length > 0) {\r\n      if (key === 'name') {\r\n        data.newName = input[key]\r\n      } else if (key === 'email') {\r\n        data.newEmail = input[key]\r\n      } else if (key === 'password') {\r\n        data.newPassword = input[key]\r\n      }\r\n    }\r\n  })\r\n\r\n  return Object.keys(data).length > 0 ? data : null\r\n}\r\n","import React, { FunctionComponent } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { connect, MapStateToProps } from 'react-redux'\r\nimport { StoreState } from '../../store/reducers'\r\n\r\ninterface LandingConnectedProps {\r\n  authenticated: boolean\r\n}\r\n\r\ninterface LandingOwnProps {}\r\n\r\nexport const Landing: FunctionComponent<LandingConnectedProps> = ({\r\n  authenticated\r\n}) => {\r\n  if (authenticated) {\r\n    return <Redirect to='/search' />\r\n  } else {\r\n    return (\r\n      <div className='background d-flex align-items-center'>\r\n        <div className='jumbotron jumbotron-fluid flex-grow-1'>\r\n          <div className='container'>\r\n            <h1 className='display-1'>Diet Helper</h1>\r\n            <p className='lead'>\r\n              The tool for diet planning and nutrition analysis.\r\n            </p>\r\n            <hr className='my-4' />\r\n            <Link to='/login' className='btn btn-lg btn-cool mr-1 mb-1'>\r\n              <p>Login</p>\r\n            </Link>\r\n            <Link to='/register' className='btn btn-lg btn-cool mb-1'>\r\n              <p>Register</p>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps: MapStateToProps<\r\n  LandingConnectedProps,\r\n  LandingOwnProps,\r\n  StoreState\r\n> = ({ profile: { authenticated } }) => ({\r\n  authenticated\r\n})\r\n\r\nexport default connect(mapStateToProps)(Landing)\r\n","import React, {\r\n  FunctionComponent,\r\n  useState,\r\n  SyntheticEvent,\r\n  FormEvent,\r\n  useEffect\r\n} from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { connect, MapStateToProps } from 'react-redux'\r\nimport { StoreState, Error } from '../../store/reducers'\r\nimport { LoginCredentials } from '../../store/actions'\r\nimport { Fields } from './Register'\r\nimport { loginUser } from '../../store/actions'\r\n\r\ninterface LoginConnectedProps {\r\n  authenticated: boolean\r\n  loading: boolean\r\n  userActed: boolean\r\n  error: null | Error\r\n  dispatch?: Function\r\n}\r\n\r\ninterface LoginOwnProps {}\r\n\r\nconst Login: FunctionComponent<LoginConnectedProps> = ({\r\n  authenticated,\r\n  loading,\r\n  userActed,\r\n  error,\r\n  dispatch\r\n}) => {\r\n  const [userData, setUserData] = useState<LoginCredentials>({\r\n    email: '',\r\n    password: ''\r\n  })\r\n\r\n  const { email, password } = userData\r\n\r\n  useEffect(() => {\r\n    const $email = document.getElementById('email')\r\n    const $password = document.getElementById('password')\r\n    if ($email && $password) {\r\n      $email.classList.remove('is-invalid')\r\n      $password.classList.remove('is-invalid')\r\n\r\n      if (\r\n        userActed &&\r\n        !loading &&\r\n        error &&\r\n        (error.status === 401 || error.status === 500)\r\n      ) {\r\n        $email.classList.add('is-invalid')\r\n        $password.classList.add('is-invalid')\r\n      }\r\n    }\r\n  }, [userActed, error, loading])\r\n\r\n  const handleChange = (e: SyntheticEvent) => {\r\n    const target = e.target as HTMLInputElement\r\n    const name = target.name\r\n    setUserData(prevState => ({\r\n      ...prevState,\r\n      [name]: target.value\r\n    }))\r\n  }\r\n\r\n  const handleSubmit = (e: FormEvent) => {\r\n    e.preventDefault()\r\n    if (dispatch) {\r\n      dispatch(loginUser(userData))\r\n    }\r\n  }\r\n\r\n  if (authenticated && !loading) {\r\n    return <Redirect to='/search' />\r\n  } else {\r\n    return (\r\n      <div className='background d-flex align-items-center'>\r\n        <div className='flex-grow-1 bg-white'>\r\n          <div className='container'>\r\n            <div className='row justify-content-center py-3'>\r\n              <div className='col-md-6'>\r\n                <h1 className='display-3'>Login</h1>\r\n                <hr className='my-3' />\r\n                <form id='login' onSubmit={handleSubmit}>\r\n                  <div className='form-group'>\r\n                    <label htmlFor='email'>Email address</label>\r\n                    <input\r\n                      type='email'\r\n                      className='form-control'\r\n                      id='email'\r\n                      name={Fields.email}\r\n                      value={email}\r\n                      onChange={handleChange}\r\n                      required\r\n                    />\r\n                    <div className='invalid-feedback'>\r\n                      {error && error.status === 401\r\n                        ? 'Sorry, authorization failed.'\r\n                        : 'Sorry, it looks like there is a server problem.'}\r\n                    </div>\r\n                  </div>\r\n                  <div className='form-group'>\r\n                    <label htmlFor='password'>Password</label>\r\n                    <input\r\n                      type='password'\r\n                      className='form-control'\r\n                      id='password'\r\n                      name={Fields.password}\r\n                      value={password}\r\n                      onChange={handleChange}\r\n                      minLength={6}\r\n                      required\r\n                    />\r\n                  </div>\r\n                </form>\r\n                <button\r\n                  type='submit'\r\n                  className='btn btn-cool mr-1'\r\n                  form='login'\r\n                >\r\n                  <span\r\n                    className='spinner-border spinner-border-sm align-middle'\r\n                    role='status'\r\n                    aria-hidden='true'\r\n                    style={\r\n                      loading && userActed\r\n                        ? { display: 'inline-block' }\r\n                        : { display: 'none' }\r\n                    }\r\n                  ></span>{' '}\r\n                  <p>Submit</p>\r\n                </button>\r\n                <Link to='/' className='btn btn-cool btn-cool-cancel'>\r\n                  <p>Go Back</p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps: MapStateToProps<\r\n  LoginConnectedProps,\r\n  LoginOwnProps,\r\n  StoreState\r\n> = ({ profile: { authenticated, error, loading }, userActed }) => ({\r\n  authenticated,\r\n  loading,\r\n  userActed,\r\n  error\r\n})\r\n\r\nexport default connect(mapStateToProps)(Login)\r\n","import React, { FunctionComponent } from 'react'\r\n\r\nexport const NotFound: FunctionComponent = () => {\r\n  return (\r\n    <div className='background d-flex align-items-center'>\r\n      <div className='flex-grow-1 bg-white'>\r\n        <div className='container'>\r\n          <div className='row justify-content-center py-3'>\r\n            <div className='col-md-6'>\r\n              <h1 className='display-3'>Not Found</h1>\r\n              <hr className='my-3' />\r\n              <p className='lead'>Sorry, the requested page doesn't exist.</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { FunctionComponent, useEffect } from 'react'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport PrivateRoute from './PrivateRoute'\r\nimport SearchRecipes from './private/SearchRecipes'\r\nimport RecipeAnalysis from './private/RecipeAnalysis'\r\nimport Collection from './private/Collection'\r\nimport ChangeCredentials from './private/ChangeCredentials'\r\nimport Landing from './public/Landing'\r\nimport Login from './public/Login'\r\nimport Register from './public/Register'\r\nimport { NotFound } from './public/NotFound'\r\n\r\nimport { synchronizer } from '../store/actions'\r\n\r\ninterface AppConnectedProps {\r\n  dispatch: Function\r\n}\r\n\r\nexport const App: FunctionComponent<AppConnectedProps> = ({ dispatch }) => {\r\n  useEffect(() => {\r\n    dispatch(synchronizer())\r\n  })\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact={true} path='/'>\r\n          <Landing />\r\n        </Route>\r\n        <Route exact={true} path='/login'>\r\n          <Login />\r\n        </Route>\r\n        <Route exact={true} path='/register'>\r\n          <Register />\r\n        </Route>\r\n        <PrivateRoute path='/search' component={SearchRecipes} />\r\n        <PrivateRoute path='/collection' component={Collection} />\r\n        <PrivateRoute path='/analysis' component={RecipeAnalysis} />\r\n        <PrivateRoute path='/credentials' component={ChangeCredentials} />\r\n        <Route path='*'>\r\n          <NotFound />\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default connect()(App)\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { store } from './store/store'\nimport App from './components/App'\nimport './scss/bootstrap.scss'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}